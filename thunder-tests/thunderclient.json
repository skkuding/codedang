[
  {
    "_id": "fd33c48d-00af-4dea-b600-449bef7e5bea",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
    "name": "Succeed",
    "url": "/auth/login",
    "method": "POST",
    "sortNum": 10000,
    "created": "2023-01-04T03:25:24.818Z",
    "modified": "2023-01-15T14:00:39.842Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"adminadmin\"\n}",
      "form": []
    },
    "tests": [
      {
        "type": "res-code",
        "custom": "",
        "action": "equal",
        "value": "201"
      },
      {
        "type": "custom-header",
        "custom": "Authorization",
        "action": "contains",
        "value": "Bearer"
      },
      {
        "type": "custom-header",
        "custom": "Set-Cookie",
        "action": "contains",
        "value": "refresh_token"
      },
      {
        "type": "set-env-var",
        "custom": "header.authorization",
        "action": "setto",
        "value": "{{bearer_token}}"
      },
      {
        "type": "set-env-var",
        "custom": "cookie.refresh_token",
        "action": "setto",
        "value": "{{refresh_token}}"
      }
    ],
    "docs": "# Log In\n\n사용자가 올바른 정보로 로그인하면 JWT를 발행합니다.  \n보안을 위해 짧은 만료 시간의 access token과 이를 재발행해주는 긴 만료 시간의 refresh token 두 가지를 발행합니다.\n\n### Access Token\n- `Authrization` header를 통해 bearer token을 발급합니다.\n- Header로 발급되기 때문에, client에 token을 직접 저장하는 코드가 필요합니다.\n- 30분 후 만료됩니다.\n\n### Refresh Token\n- Cookie를 통해 발급합니다. 브라우저에 cookie가 자동으로 저장됩니다.\n- `/auth/reissue`를 통해 access token을 재발급받을 때 필요합니다.\n- **가장 유출에 조심해야하는 값입니다.**\n- 24시간 후 만료됩니다."
  },
  {
    "_id": "c5ccfac6-5e94-4b03-aecb-e357db6157b9",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "cc8fc31f-2302-4a24-82d6-c8e105e4fb56",
    "name": "Succeed",
    "url": "/auth/logout",
    "method": "POST",
    "sortNum": 10000,
    "created": "2023-01-04T03:36:13.805Z",
    "modified": "2023-01-15T15:08:25.492Z",
    "headers": [],
    "params": [],
    "tests": [
      {
        "type": "res-code",
        "custom": "",
        "action": "equal",
        "value": "201"
      },
      {
        "type": "set-env-var",
        "custom": "cookie.refresh_token",
        "action": "setto",
        "value": "{{refresh_token}}"
      },
      {
        "type": "set-env-var",
        "custom": "null",
        "action": "setto",
        "value": "{{bearer_token}}"
      }
    ],
    "docs": "# Log Out\n\nRefresh Token을 무효화하고 cookie에서 삭제합니다.  \nAccess Token은 만료되기 전까지 유효하며, client에서 직접 삭제해야합니다.",
    "preReq": {
      "runRequests": [
        {
          "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
          "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
          "triggerCondition": "run-always",
          "triggerValue": ""
        }
      ]
    }
  },
  {
    "_id": "caf44ce8-e6cc-4ca8-84bc-512b0fea903c",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "9e5e3dea-82d6-4ea7-913b-e3888664742b",
    "name": "Reissue token",
    "url": "/auth/reissue",
    "method": "GET",
    "sortNum": 30000,
    "created": "2023-01-04T03:36:45.663Z",
    "modified": "2023-01-15T12:52:01.211Z",
    "headers": [
      {
        "name": "Set-Cookie",
        "value": "refresh_token={{refresh_token}}"
      }
    ],
    "params": [],
    "tests": [
      {
        "type": "res-code",
        "custom": "",
        "action": "equal",
        "value": "200"
      },
      {
        "type": "custom-header",
        "custom": "Authorization",
        "action": "contains",
        "value": "Bearer"
      },
      {
        "type": "set-env-var",
        "custom": "header.authorization",
        "action": "setto",
        "value": "{{bearer_token}}"
      }
    ]
  },
  {
    "_id": "8a6129e2-e8bc-4852-8e6e-568e89f08990",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
    "name": "Get all contests",
    "url": "/contest",
    "method": "GET",
    "sortNum": 40000,
    "created": "2023-01-04T03:41:11.804Z",
    "modified": "2023-01-15T12:39:42.923Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "cae53d1e-c7c4-4825-a7f5-96a61a478d70",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
    "name": "Get modal contest by ID",
    "url": "/contest/1/modal",
    "method": "GET",
    "sortNum": 50000,
    "created": "2023-01-04T03:43:05.492Z",
    "modified": "2023-01-15T13:14:25.973Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "df4f680f-9ae5-4f1d-9169-08a9a62b8bcd",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
    "name": "Get group's all contests",
    "url": "/group/1/contest",
    "method": "GET",
    "sortNum": 60000,
    "created": "2023-01-04T03:44:08.324Z",
    "modified": "2023-01-15T12:40:20.258Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "af8a1447-ee6c-4e13-bf24-7617ffde6f25",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
    "name": "Get group's contest by ID",
    "url": "/group/1/contest/2",
    "method": "GET",
    "sortNum": 70000,
    "created": "2023-01-04T03:44:47.207Z",
    "modified": "2023-01-15T13:07:09.631Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "989c4ce8-2ca8-4b07-847f-4fb37eac729c",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
    "name": "Participate group's contest",
    "url": "/group/1/contest/1/participation",
    "method": "POST",
    "sortNum": 80000,
    "created": "2023-01-04T03:45:44.318Z",
    "modified": "2023-01-15T13:14:15.310Z",
    "headers": [],
    "params": [],
    "tests": []
  },
  {
    "_id": "691cde43-a8df-449e-96e1-a791684024d6",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
    "name": "400: Empty field",
    "url": "/auth/login",
    "method": "POST",
    "sortNum": 20000,
    "created": "2023-01-15T14:01:40.146Z",
    "modified": "2023-01-15T14:40:26.917Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"username\": \"\",\n  \"password\": \"\"\n}",
      "form": []
    },
    "tests": [
      {
        "type": "res-code",
        "custom": "",
        "action": "equal",
        "value": "400"
      },
      {
        "type": "res-body",
        "custom": "",
        "action": "contains",
        "value": "username should not be empty"
      },
      {
        "type": "res-body",
        "custom": "",
        "action": "contains",
        "value": "password should not be empty"
      }
    ]
  },
  {
    "_id": "91e8faa0-f117-4bf2-8647-baf7de706b8d",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
    "name": "401: Nonexistent user",
    "url": "/auth/login",
    "method": "POST",
    "sortNum": 30000,
    "created": "2023-01-15T14:38:46.092Z",
    "modified": "2023-01-15T14:42:05.047Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"username\": \"nobody\",\n  \"password\": \"nobody\"\n}",
      "form": []
    },
    "tests": [
      {
        "type": "res-code",
        "custom": "",
        "action": "equal",
        "value": "401"
      },
      {
        "type": "res-body",
        "custom": "",
        "action": "contains",
        "value": "Incorrect username or password"
      }
    ]
  },
  {
    "_id": "fbf30bc7-ca8a-4486-b85a-2bec8cf259ea",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
    "name": "401: Incorrect password",
    "url": "/auth/login",
    "method": "POST",
    "sortNum": 40000,
    "created": "2023-01-15T14:40:53.559Z",
    "modified": "2023-01-15T14:42:14.818Z",
    "headers": [],
    "params": [],
    "body": {
      "type": "json",
      "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"wrongpassword\"\n}",
      "form": []
    },
    "tests": [
      {
        "type": "res-code",
        "custom": "",
        "action": "equal",
        "value": "401"
      },
      {
        "type": "res-body",
        "custom": "",
        "action": "contains",
        "value": "Incorrect username or password"
      }
    ]
  },
  {
    "_id": "f8dde72c-4f3b-4252-bfb7-bc481736dc07",
    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "containerId": "cc8fc31f-2302-4a24-82d6-c8e105e4fb56",
    "name": "401: Invalid Token",
    "url": "/auth/logout",
    "method": "POST",
    "sortNum": 20000,
    "created": "2023-01-15T14:58:53.478Z",
    "modified": "2023-01-15T15:00:31.793Z",
    "headers": [],
    "params": [],
    "tests": [
      {
        "type": "res-code",
        "custom": "",
        "action": "equal",
        "value": "401"
      }
    ],
    "preReq": {
      "runRequests": [
        {
          "reqId": "c5ccfac6-5e94-4b03-aecb-e357db6157b9",
          "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
          "triggerCondition": "run-always",
          "triggerValue": ""
        }
      ]
    }
  }
]