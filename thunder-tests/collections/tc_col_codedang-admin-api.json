{
    "_id": "089b01d8-96da-497e-8921-f5df86e4d23c",
    "colName": "Codedang Admin API",
    "created": "2023-05-02T10:59:44.408Z",
    "sortNum": 20000,
    "folders": [
        {
            "_id": "fe52bede-3550-4899-9738-50719d9b04ef",
            "name": "Group",
            "containerId": "",
            "created": "2023-07-01T08:36:12.949Z",
            "sortNum": 10000
        },
        {
            "_id": "e301836d-c693-4efe-a13b-59250583415f",
            "name": "Get Group",
            "containerId": "fe52bede-3550-4899-9738-50719d9b04ef",
            "created": "2023-07-01T08:36:36.695Z",
            "sortNum": 30000
        },
        {
            "_id": "50fd1447-8e48-415a-adb8-29d7d7f742cc",
            "name": "Get Groups (Admin)",
            "containerId": "fe52bede-3550-4899-9738-50719d9b04ef",
            "created": "2023-07-01T08:38:28.308Z",
            "sortNum": 22500
        },
        {
            "_id": "771ab14a-f583-4a94-a34e-4f8e8b569d8b",
            "name": "Create Group",
            "containerId": "fe52bede-3550-4899-9738-50719d9b04ef",
            "created": "2023-07-01T08:38:49.546Z",
            "sortNum": 15000
        },
        {
            "_id": "2e6dd7d6-4110-4bd0-9138-660931d2a26d",
            "name": "Update Group",
            "containerId": "fe52bede-3550-4899-9738-50719d9b04ef",
            "created": "2023-07-01T08:38:57.241Z",
            "sortNum": 70000
        },
        {
            "_id": "5cbf039a-6e9c-4321-93c2-e297a12b480e",
            "name": "Delete Group",
            "containerId": "fe52bede-3550-4899-9738-50719d9b04ef",
            "created": "2023-07-01T08:39:04.697Z",
            "sortNum": 80000
        },
        {
            "_id": "419a4432-6b41-4cd0-a04e-f302e7be447b",
            "name": "Problem",
            "containerId": "",
            "created": "2023-07-05T12:16:41.472Z",
            "sortNum": 90000
        },
        {
            "_id": "c9bbfd01-d3e3-460c-9625-94ec0de174c4",
            "name": "Create Problem",
            "containerId": "419a4432-6b41-4cd0-a04e-f302e7be447b",
            "created": "2023-07-05T12:28:24.255Z",
            "sortNum": 110000
        },
        {
            "_id": "91157119-135b-4089-a02e-9c91b41fda30",
            "name": "Get Problem",
            "containerId": "419a4432-6b41-4cd0-a04e-f302e7be447b",
            "created": "2023-07-05T12:28:42.507Z",
            "sortNum": 120000
        },
        {
            "_id": "ed6b8f9d-1688-452b-a730-155899a617fa",
            "name": "Delete Problem",
            "containerId": "419a4432-6b41-4cd0-a04e-f302e7be447b",
            "created": "2023-07-05T14:22:50.261Z",
            "sortNum": 130000
        },
        {
            "_id": "3eeedd48-2d7b-4174-ab10-c4108c0ed44c",
            "name": "Update Problem",
            "containerId": "419a4432-6b41-4cd0-a04e-f302e7be447b",
            "created": "2023-07-13T12:50:04.924Z",
            "sortNum": 140000
        },
        {
            "_id": "052b2adc-2583-4006-9d78-09138d4efbb1",
            "name": "Upload Problems",
            "containerId": "419a4432-6b41-4cd0-a04e-f302e7be447b",
            "created": "2023-07-13T20:55:09.917Z",
            "sortNum": 100000
        },
        {
            "_id": "b235e35a-63de-40d9-ae62-5086e1131d08",
            "name": "Get Problems",
            "containerId": "419a4432-6b41-4cd0-a04e-f302e7be447b",
            "created": "2023-07-31T17:53:40.907Z",
            "sortNum": 115000
        }
    ],
    "settings": {
        "auth": {
            "type": "bearer",
            "bearer": "{{bearer_token}}"
        },
        "options": {
            "baseUrl": "localhost:3000/graphql"
        }
    },
    "requests": [
        {
            "_id": "71642f55-4b63-417a-8f07-b466f2b65c88",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "50fd1447-8e48-415a-adb8-29d7d7f742cc",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-07-01T08:39:22.506Z",
            "modified": "2023-07-31T18:16:57.814Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "query Group {\n  getGroups(take: 3) {\n    id\n    groupName\n    description\n    config\n    memberNum\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "groupName"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "description"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "config"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "memberNum"
                },
                {
                    "type": "json-query",
                    "custom": "json.data.getGroups.id | length",
                    "action": "<=",
                    "value": "3"
                }
            ],
            "docs": "# Get Groups [어드민 대시보드]\n\n모든 그룹의 목록을 가져옵니다.\n\n### Query\n- `cursor`: (optional) 가져올 아이템의 기준점으로, take 값에 따라 기준점의 앞뒤에 있는 아이템을 가져오게 됩니다. cursor 값은 항상 양수여야 하며, 값을 넘겨주지 않으면 자동으로 첫번째 아이템부터 반환됩니다.\n- `take`: 가져올 아이템의 개수를 지정합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "05e3046e-d43c-43d2-aaf9-a2c948b41183",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "771ab14a-f583-4a94-a34e-4f8e8b569d8b",
            "name": "422: Duplicate Name",
            "url": "",
            "method": "POST",
            "sortNum": 20000,
            "created": "2023-07-01T09:06:26.347Z",
            "modified": "2023-07-01T09:12:06.176Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Group {\n  createGroup(input: {\n    groupName: \"Example Group\",\n    description: \"Blah Blah\",\n    config: {\n      showOnList: true,\n      allowJoinFromSearch: true,\n      allowJoinWithURL: false,\n      requireApprovalBeforeJoin: true\n    }\n  }) {\n    id\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "json-query",
                    "custom": "json.errors[0].extensions.status",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "json-query",
                    "custom": "json.errors[0].message",
                    "action": "equal",
                    "value": "Group name already exists"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "86d2ae24-54f0-4567-9a3c-a993ac915ad4",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "d69f62f2-213f-495e-b8b7-d2904e9c434a",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "771ab14a-f583-4a94-a34e-4f8e8b569d8b",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-07-01T09:23:20.634Z",
            "modified": "2023-07-02T07:28:34.441Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Group {\n  createGroup(input: {\n    groupName: \"New Group\",\n    description: \"Blah Blah\",\n    config: {\n      showOnList: false,\n      allowJoinFromSearch: true,\n      allowJoinWithURL: false,\n      requireApprovalBeforeJoin: true\n    }\n  }) {\n    id\n    config\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                }
            ],
            "docs": "# Create Group [유저 대시보드 /그룹]\n\n**⚠️ 최초 1번만 동작할 리퀘스트입니다. 다시 성공 응답을 받으려면 (1) input의 그룹명을 바꿔 리퀘스트를 전송하거나 (2) `npx prisma migrate reset`을 실행해주세요.**  \n\n새로운 그룹을 생성합니다.\n\n### Constraints\n- Manager 이상의 role을 가진 유저만 새 그룹을 생성할 수 있습니다.\n- 그룹의 이름은 다른 그룹의 이름과 같을 수 없습니다.\n- 유저에게 주어져야 하는 그룹 config의 디폴트 값은 다음과 같습니다.\n  ```json\n  showOnList: true\n  allowJoinFromSearch: true\n  allowJoinWithURL: false\n  requireApprovalBeforeJoin: true\n  ```\n  + `showOnList`가 false이면 `allowJoinFromSearch` 값이 항상 false로 적용됩니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "86d2ae24-54f0-4567-9a3c-a993ac915ad4",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "1448e822-f5bb-45aa-a9b0-db9ba1fbda85",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "e301836d-c693-4efe-a13b-59250583415f",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-07-01T09:28:51.000Z",
            "modified": "2023-07-31T17:33:19.718Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "query Group {\n  getGroup(groupId: 1) {\n    id\n    groupName\n    description\n    config\n    createTime\n    memberNum\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "groupName"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "description"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "config"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "createTime"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "memberNum"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "managers"
                }
            ],
            "docs": "# Get Group [그룹 대시보드]\n\n그룹의 상세 정보를 보여줍니다.  \n그룹이 존재하지 않거나 유저에게 그룹 관리 권한이 없는 경우 403이 반환됩니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "1894da94-9c1c-4af8-8ea8-a23f8b74ed4d",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "2e6dd7d6-4110-4bd0-9138-660931d2a26d",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 2500,
            "created": "2023-07-01T09:38:06.086Z",
            "modified": "2023-07-02T07:28:39.971Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Group {\n  updateGroup(\n    groupId: 3\n    input: {\n      groupName: \"Revised Group\",\n      description: \"Blah Blah\",\n      config: {\n        showOnList: false,\n        allowJoinFromSearch: true,\n        allowJoinWithURL: false\n        requireApprovalBeforeJoin: true\n      }\n    }\n  ) {\n    id\n    groupName\n    description\n    config\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "groupName"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "description"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "config"
                }
            ],
            "docs": "# Update Group [그룹 대시보드]\n\n새로운 그룹을 생성합니다.\n\n### Constraints\n- 그룹의 이름은 다른 그룹의 이름과 같을 수 없습니다.\n  + c.f. 422: Duplicate Group Name\n- Open Space의 정보는 업데이트할 수 없습니다.\n- `config`의 `showOnList`가 false이면 `allowJoinFromSearch` 값이 항상 false로 적용됩니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a62bc1b-fbff-4f01-bbb8-bbf08974ea80",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "4a434dd3-41c8-410f-b6f1-e899d8c5001d",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "2e6dd7d6-4110-4bd0-9138-660931d2a26d",
            "name": "422: Duplicate Name",
            "url": "",
            "method": "POST",
            "sortNum": 5000,
            "created": "2023-07-01T09:38:13.195Z",
            "modified": "2023-07-01T09:44:51.817Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Group {\n  updateGroup(\n    groupId: 2\n    input: {\n      groupName: \"Example Group\",\n      description: \"Blah Blah\",\n      config: {\n        showOnList: true,\n        allowJoinFromSearch: true,\n        allowJoinWithURL: false\n        requireApprovalBeforeJoin: true\n      }\n    }\n  ) {\n    id\n    groupName\n    description\n    config\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "json-query",
                    "custom": "json.errors[0].extensions.status",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "json-query",
                    "custom": "json.errors[0].message",
                    "action": "equal",
                    "value": "Group name already exists"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a62bc1b-fbff-4f01-bbb8-bbf08974ea80",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "9b958c6b-8809-462c-b451-88177295c25f",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "5cbf039a-6e9c-4321-93c2-e297a12b480e",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 30000,
            "created": "2023-07-01T09:47:35.203Z",
            "modified": "2023-07-01T13:32:37.976Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Group {\n  deleteGroup(groupId: 4) {\n    count\n  }\n}"
                }
            },
            "tests": [],
            "docs": "# Delete Group [그룹 대시보드]\n\n**⚠️ 최초 1번만 동작할 리퀘스트입니다. 다시 성공 응답을 받으려면 `npx prisma migrate reset`을 실행해주세요.**  \n\n그룹을 삭제합니다.\n\n### Constraints\n- 그룹은 그룹의 생성자 혹은 Admin/SuperAdmin만 삭제할 수 있습니다.\n- 그룹의 관리자이더라도 그룹을 생성한 유저가 아니라면 삭제가 불가능합니다.\n- Open Space는 어떤 유저도 삭제할 수 없습니다.\n",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "86d2ae24-54f0-4567-9a3c-a993ac915ad4",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "53cc571f-a6d1-4c8d-8659-d261b337933d",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "5cbf039a-6e9c-4321-93c2-e297a12b480e",
            "name": "403: Not Creator",
            "url": "",
            "method": "POST",
            "sortNum": 40000,
            "created": "2023-07-01T09:48:00.827Z",
            "modified": "2023-07-01T13:31:40.071Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Group {\n  deleteGroup(groupId: 2) {\n    count\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "json-query",
                    "custom": "json.errors[0].extensions.originalError.statusCode",
                    "action": "equal",
                    "value": "403"
                },
                {
                    "type": "json-query",
                    "custom": "json.errors[0].message",
                    "action": "equal",
                    "value": "If not admin, only creator can delete a group"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "d62f2e3e-7a5c-4543-8eff-bb146cabde99",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "5cbf039a-6e9c-4321-93c2-e297a12b480e",
            "name": "403: Protected Open Space",
            "url": "",
            "method": "POST",
            "sortNum": 35000,
            "created": "2023-07-01T13:27:34.416Z",
            "modified": "2023-07-01T15:08:53.783Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Group {\n  deleteGroup(groupId: 1) {\n    count\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "json-query",
                    "custom": "json.errors[0].extensions.originalError.statusCode",
                    "action": "equal",
                    "value": "403"
                },
                {
                    "type": "json-query",
                    "custom": "json.errors[0].message",
                    "action": "equal",
                    "value": "Open space cannot be deleted"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a62bc1b-fbff-4f01-bbb8-bbf08974ea80",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "9631bc1c-c071-4512-9dc6-43267b8f9c78",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "2e6dd7d6-4110-4bd0-9138-660931d2a26d",
            "name": "403: Protected Open Space",
            "url": "",
            "method": "POST",
            "sortNum": 3750,
            "created": "2023-07-01T15:05:20.179Z",
            "modified": "2023-07-01T15:09:04.804Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Group {\n  updateGroup(\n    groupId: 1\n    input: {\n      groupName: \"Revised Group\",\n      description: \"Blah Blah\",\n      config: {\n        showOnList: true,\n        allowJoinFromSearch: true,\n        allowJoinWithURL: false\n        requireApprovalBeforeJoin: true\n      }\n    }\n  ) {\n    id\n    groupName\n    description\n    config\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "json-query",
                    "custom": "json.errors[0].extensions.originalError.statusCode",
                    "action": "equal",
                    "value": "403"
                },
                {
                    "type": "json-query",
                    "custom": "json.errors[0].message",
                    "action": "equal",
                    "value": "Open space cannot be updated"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a62bc1b-fbff-4f01-bbb8-bbf08974ea80",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "54c1397a-722c-4d58-a608-1938b644ab7d",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "c9bbfd01-d3e3-460c-9625-94ec0de174c4",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-07-05T12:16:57.576Z",
            "modified": "2023-07-31T19:06:26.619Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem($input: CreateProblemInput!){\n    createProblem(\n        input: $input\n    ){\n        id\n    }\n}",
                    "variables": "{\n  \"input\": {\n    \"title\": \"title0\",\n    \"description\": \"description0\",\n    \"inputDescription\": \"inputDescription0\",\n    \"outputDescription\": \"ouputDescription0\",\n    \"hint\": \"hint0\",\n    \"template\": [{\n      \"language\": \"C\",\n      \"code\": [{\n        \"id\": 1,\n        \"text\": \"int main(void) {}\",\n        \"locked\": false\n      }]\n    }],\n    \"languages\": [\"C\",\"Java\"],\n    \"timeLimit\": 666,\n    \"memoryLimit\": 33,\n    \"difficulty\": \"Level1\",\n    \"source\": \"source0\",\n    \"inputExamples\": [\"i0\",\"i1\"],\n    \"outputExamples\": [\"o0\",\"o1\"],\n    \"testcases\": [\n      {\n        \"input\": \"input0\",\n        \"output\": \"output0\"\n      },{\n        \"input\": \"input1\",\n        \"output\": \"output1\"\n      }\n      ],\n      \"tagIds\": []\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                }
            ],
            "docs": "# Create Problem\n\n새로운 문제를 생성합니다.  \n그룹이 존재하지 않거나 유저에게 그룹 관리 권한이 없는 경우 403이 반환됩니다.  \n\n### Query\n- `groupId`를 설정하지 않으면 Open Space로 인식합니다.\n- 테스트케이스와 태그를 설정하지 않으려면, 각각 `problemTestcase`와 `tagIds`에 빈 배열을 넘겨주세요.\n\n### Constraints\n- 현재 시스템에서 지원하는 언어는 C, Cpp, Java, Python3뿐입니다.\n- 아래의 세 가지 제약 조건을 어길 시 422가 반환됩니다:\n- `languages`는 빈 배열일 수 없습니다(= 아무 언어도 지원하지 않는 문제는 만들 수 없습니다).\n- `template`의 기반 언어는 `languages`에 속해 있어야 합니다.\n- 존재하지 않는 태그의 ID는 `tagIds`에 포함될 수 없습니다.\n",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "319d43a7-84af-453f-a130-0591d5dae7c1",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "c9bbfd01-d3e3-460c-9625-94ec0de174c4",
            "name": "422: No Language Supported",
            "url": "",
            "method": "POST",
            "sortNum": 20000,
            "created": "2023-07-05T12:26:45.056Z",
            "modified": "2023-07-31T19:05:35.968Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem($input: CreateProblemInput!){\n    createProblem(\n        input: $input\n    ){\n        id\n    }\n}",
                    "variables": "{\n  \"input\": {\n    \"title\": \"title0\",\n    \"description\": \"description0\",\n    \"inputDescription\": \"inputDescription0\",\n    \"outputDescription\": \"ouputDescription0\",\n    \"hint\": \"hint0\",\n    \"template\": [{\n      \"language\": \"C\",\n      \"code\": [{\n        \"id\": 1,\n        \"text\": \"int main(void) {}\",\n        \"locked\": false\n      }]\n    }],\n    \"languages\": [],\n    \"timeLimit\": 666,\n    \"memoryLimit\": 33,\n    \"difficulty\": \"Level1\",\n    \"source\": \"source0\",\n    \"inputExamples\": [\"i0\",\"i1\"],\n    \"outputExamples\": [\"o0\",\"o1\"],\n    \"testcases\": [\n      {\n        \"input\": \"input0\",\n        \"output\": \"output0\"\n      },{\n        \"input\": \"input1\",\n        \"output\": \"output1\"\n      }\n      ],\n      \"tagIds\": [1]\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"statusCode\": 422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"message\": \"A problem should support at least one language\""
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "4040e773-ed8d-4560-a4b6-7b7736c6ff52",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "ed6b8f9d-1688-452b-a730-155899a617fa",
            "name": "Delete Problem",
            "url": "",
            "method": "POST",
            "sortNum": 60000,
            "created": "2023-07-05T14:22:58.417Z",
            "modified": "2023-07-31T17:57:28.218Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem {\n    deleteProblem(\n        groupId: 1\n        id: 1\n    ){\n        title\n    }\n}"
                }
            },
            "tests": [],
            "docs": "# Delete Problem [그룹 대시보드]\n\n**⚠️ 최초 1번만 동작할 리퀘스트입니다. 다시 성공 응답을 받으려면 `npx prisma migrate reset`을 실행해주세요.**  \n\n문제를 삭제합니다. \n그룹이 존재하지 않거나 유저에게 그룹 관리 권한이 없는 경우 403이 반환됩니다.  \n관리 권한이 있지만 ID에 해당하는 문제가 존재하지 않는다면 404가 반환됩니다.\n\n### Query\n- `groupId`를 설정하지 않으면 Open Space로 인식합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "0a9d1ef4-339a-413f-85f9-a400a43a87f2",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "91157119-135b-4089-a02e-9c91b41fda30",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 80000,
            "created": "2023-07-08T08:34:20.899Z",
            "modified": "2023-07-31T17:56:34.116Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "query Problem {\n    getProblem(\n        id: 1\n        groupId: 1\n    ){\n        id\n        title\n        problemTestcase {\n            id\n            input\n            output\n            scoreWeight\n        }\n        problemTag {\n            tag {\n                id\n                name\n            }\n        }\n    }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "title"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "problemTestcase"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "problemTag"
                }
            ],
            "docs": "# Get Problem [그룹 대시보드]\n\n하나의 문제를  조회합니다.  \n그룹이 존재하지 않거나 유저에게 그룹 관리 권한이 없는 경우 403이 반환됩니다.  \n관리 권한이 있지만 ID에 해당하는 문제가 존재하지 않는다면 404가 반환됩니다.\n\n### Query\n- `groupId`를 설정하지 않으면 Open Space로 인식합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "fac8632a-f618-498a-be5d-013341f3f480",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "b235e35a-63de-40d9-ae62-5086e1131d08",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-07-12T12:48:18.260Z",
            "modified": "2023-07-31T18:55:32.177Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "query Problem($input:FilterProblemsInput!){\n    getProblems(\n        groupId: 1\n        input: $input\n        take: 1\n    ){\n        id\n        title\n    }\n}",
                    "variables": "{\n  \"input\": {\n    \"difficulty\": [\"Level1\"]\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "json-query",
                    "custom": "json.data.getProblems.id | length",
                    "action": "<=",
                    "value": "1"
                }
            ],
            "docs": "# Get Problems\n\n그룹의 모든 문제를 조회합니다. `input`이 설정되어 있을 경우, 주어진 조건을 만족하는 문제만을 반환합니다.  \n그룹이 존재하지 않거나 유저에게 그룹 관리 권한이 없는 경우 403이 반환됩니다.  \n\n### Query\n- `groupId`를 설정하지 않으면 Open Space로 인식합니다.\n- `cursor`는 (optional) 가져올 아이템의 기준점으로, take 값에 따라 기준점의 앞뒤에 있는 아이템을 가져오게 됩니다. cursor 값은 항상 양수여야 하며, 값을 넘겨주지 않으면 자동으로 첫번째 아이템부터 반환됩니다.\n- `take`로 가져올 아이템의 개수를 지정합니다.\n- `languages`의 언어 중 하나 이상의 언어를 지원하는 문제를 모두 반환합니다.\n",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "93bfe8b6-d805-49c8-ac19-40c7c08924ce",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "3eeedd48-2d7b-4174-ab10-c4108c0ed44c",
            "name": "Update Problem",
            "url": "",
            "method": "POST",
            "sortNum": 110000,
            "created": "2023-07-13T12:50:23.837Z",
            "modified": "2023-07-31T19:30:25.248Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem($input: UpdateProblemInput!){\n    updateProblem(\n        groupId: 1\n        input: $input\n    ){\n        id\n        title\n    }\n}",
                    "variables": "{\n  \"input\":{\n    \"id\": 1,\n    \"title\": \"title0\",\n    \"languages\": [],\n    \"tagIds\": []\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"statusCode\": 422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"message\": \"A problem should support at least one language\""
                }
            ],
            "docs": "# Update Problem\n\n문제를 수정합니다.  \n그룹이 존재하지 않거나 유저에게 그룹 관리 권한이 없는 경우 403이 반환됩니다.  \n\n### Query\n- `groupId`를 설정하지 않으면 Open Space로 인식합니다.\n- 테스트케이스는 수정할 테이스케이스만 `testcases` 배열에 담아주세요.\n  + 기존에 있던 테이스케이스의 내용을 수정하려면, `id`, `input`, `output`, `scoreWeight`를 필드로 갖는 아이템을 배열에 넣어야 합니다. 존재하지 않는 테스트케이스 ID가 `id`로 설정되어 있을 경우, 새로운 테스트케이스로 간주됩니다.\n  + 새로운 테스트케이스를 추가하려면, 아이템이 `id`는 제외하고 나머지만을 필드로 갖도록 합니다.\n  + 수정하지 않을 테스트케이스는 전송하지 말아주세요.\n\n### Constraints\n- 현재 시스템에서 지원하는 언어는 C, Cpp, Java, Python3뿐입니다.\n- 아래의 세 가지 제약 조건을 어길 시 422가 반환됩니다:\n- `languages`는 빈 배열일 수 없습니다(= 아무 언어도 지원하지 않는 문제는 만들 수 없습니다).\n- `template`의 기반 언어는 `languages`에 속해 있어야 합니다.\n- 존재하지 않는 태그의 ID는 `tagIds`에 포함될 수 없습니다.\n",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "7525ae4b-2105-4a82-ac26-8f19eed51554",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "052b2adc-2583-4006-9d78-09138d4efbb1",
            "name": "Succeed",
            "url": "",
            "method": "POST",
            "sortNum": 60000,
            "created": "2023-07-13T20:55:25.664Z",
            "modified": "2023-07-31T22:43:46.988Z",
            "headers": [
                {
                    "name": "Apollo-Require-Preflight",
                    "value": "true"
                }
            ],
            "params": [],
            "body": {
                "type": "formdata",
                "raw": "",
                "form": [
                    {
                        "name": "operations",
                        "value": "{\"query\": \"mutation($groupId: Float!, $input: UploadFileInput!) { uploadProblems(groupId: $groupId, input: $input){id createdById groupId title description template languages difficulty}}\", \"variables\" : {\"groupId\": 2, \"input\": {\"file\": null}}}"
                    },
                    {
                        "name": "map",
                        "value": "{\"nfile\":[\"variables.input.file\"]}"
                    }
                ],
                "files": [
                    {
                        "name": "nfile",
                        "value": "../backend/apps/admin/src/problem/mock/testdata.xlsx"
                    }
                ]
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "createdById"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "groupId"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "title"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "description"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "languages"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "template"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "difficulty"
                },
                {
                    "type": "json-query",
                    "custom": "json.data.uploadProblems.id | length",
                    "action": "equal",
                    "value": "2"
                }
            ],
            "docs": "# Upload file\n\n## Input Specification\n\n### Query\n```GraphQL\nmutation ($groupId: Float!, $input: UploadFileInput!) {\n  uploadProblems (\n    groupId: $groupId,\n    input: $input\n  }) {\n    id\n    createdById\n    groupId\n    title\n    description\n    languages\n    template\n    difficulty\n  }\n}\n```\n\n### Variables\n```GraphQL\n{\n  \"groupId\": 2,\n  \"input\": {\n     \"file\": null\n  }\n}\n```\n\n자세한 Input specification은 <br>\nhttps://github.com/jaydenseric/graphql-multipart-request-spec 를 참고해주세요.\n\n<br>\n\n### Description\nExcel 파일(.xlsx)을 통해 problem을 업로드할 수 있도록 합니다.  \n파일의 확장자가 엑셀이 아니거나, 파일 내 특정 데이터가 형식에 맞지 않을 경우 줄 번호와 함께 422을 반환합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "63a87433-61f1-4a70-afc7-2991fb3f084c",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "052b2adc-2583-4006-9d78-09138d4efbb1",
            "name": "422: Unsupported file",
            "url": "",
            "method": "POST",
            "sortNum": 70000,
            "created": "2023-07-27T12:48:14.751Z",
            "modified": "2023-07-31T21:57:24.408Z",
            "headers": [
                {
                    "name": "Apollo-Require-Preflight",
                    "value": "true"
                }
            ],
            "params": [],
            "body": {
                "type": "formdata",
                "raw": "",
                "form": [
                    {
                        "name": "operations",
                        "value": "{\"query\": \"mutation($groupId: Float!, $input: FileUploadInput!) { uploadProblems(groupId: $groupId, input: $input){id createdById groupId title description template languages difficulty}}\", \"variables\" : {\"groupId\": 2, \"input\": {\"file\": null}}}"
                    },
                    {
                        "name": "map",
                        "value": "{\"nfile\":[\"variables.input.file\"]}"
                    }
                ],
                "files": [
                    {
                        "name": "nfile",
                        "value": "../README.md"
                    }
                ]
            },
            "tests": [
                {
                    "type": "json-query",
                    "custom": "json.errors[0].extensions.originalError.statusCode",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "json-query",
                    "custom": "json.errors[0].message",
                    "action": "equal",
                    "value": "Extensions except Excel(.xlsx, .xls) are not supported."
                }
            ],
            "docs": "# Upload file\n\n## Input Specification\n\n### Query\n```GraphQL\nmutation ($groupId: Float!, $input: FileUploadInput!) {\n  uploadProblems (\n    groupId: $groupId,\n    input: $input\n  }) {\n    id\n    createdById\n    groupId\n    title\n    description\n    languages\n    template\n    difficulty\n  }\n}\n```\n\n### Variables\n```GraphQL\n{\n  \"groupId\": 2,\n  \"input\": {\n     \"file\": null\n  }\n}\n```\n\n자세한 Input specification은 <br>\nhttps://github.com/jaydenseric/graphql-multipart-request-spec 를 참고해주세요.\n\n<br>\n\n### Description\n구름에서 export한 excel 파일(.xlsx)을 통해 problem들을 업로드할 수 있도록 합니다.<br><br>\n\n\n",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "820eb328-e510-43a1-a8cf-1dc021525d2b",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "c9bbfd01-d3e3-460c-9625-94ec0de174c4",
            "name": "422: Template in Not Supported Language",
            "url": "",
            "method": "POST",
            "sortNum": 30000,
            "created": "2023-07-31T18:47:36.003Z",
            "modified": "2023-07-31T19:06:04.166Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem($input: CreateProblemInput!){\n    createProblem(\n        input: $input\n    ){\n        id\n    }\n}",
                    "variables": "{\n  \"input\": {\n    \"title\": \"title0\",\n    \"description\": \"description0\",\n    \"inputDescription\": \"inputDescription0\",\n    \"outputDescription\": \"ouputDescription0\",\n    \"hint\": \"hint0\",\n    \"template\": [{\n      \"language\": \"Python3\",\n      \"code\": [{\n        \"id\": 1,\n        \"text\": \"int main(void) {}\",\n        \"locked\": false\n      }]\n    }],\n    \"languages\": [\"C\",\"Java\"],\n    \"timeLimit\": 666,\n    \"memoryLimit\": 33,\n    \"difficulty\": \"Level1\",\n    \"source\": \"source0\",\n    \"inputExamples\": [\"i0\",\"i1\"],\n    \"outputExamples\": [\"o0\",\"o1\"],\n    \"testcases\": [\n      {\n        \"input\": \"input0\",\n        \"output\": \"output0\"\n      },{\n        \"input\": \"input1\",\n        \"output\": \"output1\"\n      }\n      ],\n      \"tagIds\": [1]\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"statusCode\": 422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"message\": \"This problem does not support Python3\""
                }
            ]
        },
        {
            "_id": "89c0be54-fb24-4a85-b826-5fdc58c8de30",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "c9bbfd01-d3e3-460c-9625-94ec0de174c4",
            "name": "422: Non-existent Tags",
            "url": "",
            "method": "POST",
            "sortNum": 40000,
            "created": "2023-07-31T18:47:38.241Z",
            "modified": "2023-07-31T19:04:59.631Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem($input: CreateProblemInput!){\n    createProblem(\n        input: $input\n    ){\n        id\n    }\n}",
                    "variables": "{\n  \"input\": {\n    \"title\": \"title0\",\n    \"description\": \"description0\",\n    \"inputDescription\": \"inputDescription0\",\n    \"outputDescription\": \"ouputDescription0\",\n    \"hint\": \"hint0\",\n    \"template\": [{\n      \"language\": \"C\",\n      \"code\": [{\n        \"id\": 1,\n        \"text\": \"int main(void) {}\",\n        \"locked\": false\n      }]\n    }],\n    \"languages\": [\"C\",\"Java\"],\n    \"timeLimit\": 666,\n    \"memoryLimit\": 33,\n    \"difficulty\": \"Level1\",\n    \"source\": \"source0\",\n    \"inputExamples\": [\"i0\",\"i1\"],\n    \"outputExamples\": [\"o0\",\"o1\"],\n    \"testcases\": [\n      {\n        \"input\": \"input0\",\n        \"output\": \"output0\"\n      },{\n        \"input\": \"input1\",\n        \"output\": \"output1\"\n      }\n      ],\n      \"tagIds\": [0]\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"statusCode\": 422"
                }
            ]
        },
        {
            "_id": "29b5feb2-e730-4f5d-b647-9c6ce2b23ab7",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "3eeedd48-2d7b-4174-ab10-c4108c0ed44c",
            "name": "422: No Language Supported",
            "url": "",
            "method": "POST",
            "sortNum": 120000,
            "created": "2023-07-31T19:29:28.071Z",
            "modified": "2023-07-31T19:33:10.982Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem($input: UpdateProblemInput!){\n    updateProblem(\n        groupId: 1\n        input: $input\n    ){\n        id\n        title\n    }\n}",
                    "variables": "{\n  \"input\":{\n    \"id\": 1,\n    \"title\": \"title0\",\n    \"languages\": [],\n    \"tagIds\": []\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"statusCode\": 422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"message\": \"A problem should support at least one language\""
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "ff63ade5-b512-4018-a91a-66b2dd1c18fe",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "3eeedd48-2d7b-4174-ab10-c4108c0ed44c",
            "name": "422: Template in Not Supported Language",
            "url": "",
            "method": "POST",
            "sortNum": 130000,
            "created": "2023-07-31T19:29:30.308Z",
            "modified": "2023-07-31T19:32:39.130Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem($input: UpdateProblemInput!){\n    updateProblem(\n        groupId: 1\n        input: $input\n    ){\n        id\n        title\n    }\n}",
                    "variables": "{\n  \"input\":{\n    \"id\": 1,\n    \"title\": \"title0\",\n    \"languages\": [\"C\",\"Java\"],\n    \"template\": [{\n      \"language\": \"Python3\",\n      \"code\": [{\n        \"id\": 1,\n        \"text\": \"int main(void) {}\",\n        \"locked\": false\n      }]\n    }],\n    \"tagIds\": []\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"statusCode\": 422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"message\": \"This problem does not support Python3\""
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "600c274b-bc5d-404e-83d8-c6e3465bb13d",
            "colId": "089b01d8-96da-497e-8921-f5df86e4d23c",
            "containerId": "3eeedd48-2d7b-4174-ab10-c4108c0ed44c",
            "name": "422: Non-existent Tags",
            "url": "",
            "method": "POST",
            "sortNum": 140000,
            "created": "2023-07-31T19:29:32.585Z",
            "modified": "2023-07-31T19:33:58.199Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation Problem($input: UpdateProblemInput!){\n    updateProblem(\n        groupId: 1\n        input: $input\n    ){\n        id\n        title\n    }\n}",
                    "variables": "{\n  \"input\":{\n    \"id\": 1,\n    \"title\": \"title0\",\n    \"languages\": [\"C\",\"Java\"],\n    \"tagIds\": [0]\n  }\n}"
                }
            },
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"statusCode\": 422"
                }
            ],
            "docs": "# Update Problem\n\n문제를 수정합니다.  \n그룹이 존재하지 않거나 유저에게 그룹 관리 권한이 없는 경우 403이 반환됩니다.  \n\n### Query\n- `groupId`를 설정하지 않으면 Open Space로 인식합니다.\n- 테스트케이스는 수정할 테이스케이스만 `testcases` 배열에 담아주세요.\n  + 기존에 있던 테이스케이스의 내용을 수정하려면, `id`, `input`, `output`, `scoreWeight`를 필드로 갖는 아이템을 배열에 넣어야 합니다. 존재하지 않는 테스트케이스 ID가 `id`로 설정되어 있을 경우, 새로운 테스트케이스로 간주됩니다.\n  + 새로운 테스트케이스를 추가하려면, 아이템이 `id`는 제외하고 나머지만을 필드로 갖도록 합니다.\n  + 수정하지 않을 테스트케이스는 전송하지 말아주세요.\n\n### Constraints\n- 현재 시스템에서 지원하는 언어는 C, Cpp, Java, Python3뿐입니다.\n- 아래의 세 가지 제약 조건을 어길 시 422가 반환됩니다:\n- `languages`는 빈 배열일 수 없습니다(= 아무 언어도 지원하지 않는 문제는 만들 수 없습니다).\n- `template`의 기반 언어는 `languages`에 속해 있어야 합니다.\n- 존재하지 않는 태그의 ID는 `tagIds`에 포함될 수 없습니다.\n",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        }
    ]
}
