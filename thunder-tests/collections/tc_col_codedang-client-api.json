{
    "_id": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
    "colName": "Codedang Client API",
    "created": "2023-01-04T03:24:30.216Z",
    "sortNum": 10000,
    "folders": [
        {
            "_id": "9e5e3dea-82d6-4ea7-913b-e3888664742b",
            "name": "Auth",
            "containerId": "",
            "created": "2023-01-04T03:24:35.116Z",
            "sortNum": 10000
        },
        {
            "_id": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "name": "Contest",
            "containerId": "",
            "created": "2023-01-04T03:24:47.480Z",
            "sortNum": 20000
        },
        {
            "_id": "a9aa5ec4-bc54-44ba-adf1-f2cb4ee6876a",
            "name": "Group",
            "containerId": "",
            "created": "2023-01-04T03:24:55.095Z",
            "sortNum": 40000,
            "settings": {
                "runOptions": {
                    "delay": 10,
                    "iterations": 3,
                    "dataFilePath": ""
                }
            }
        },
        {
            "_id": "1974437e-c319-43a2-a67f-c7bf6c7fb000",
            "name": "Notice",
            "containerId": "",
            "created": "2023-01-04T03:24:58.835Z",
            "sortNum": 50000
        },
        {
            "_id": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "name": "Problem",
            "containerId": "",
            "created": "2023-01-04T03:25:06.086Z",
            "sortNum": 60000
        },
        {
            "_id": "6dae5743-bac8-4ce4-a198-1ddf8d324346",
            "name": "Submission",
            "containerId": "",
            "created": "2023-01-04T03:25:09.431Z",
            "sortNum": 70000
        },
        {
            "_id": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "name": "User",
            "containerId": "",
            "created": "2023-01-04T03:25:13.930Z",
            "sortNum": 80000
        },
        {
            "_id": "b31b0cce-32af-4db8-b281-76478bf9e920",
            "name": "Workbook",
            "containerId": "",
            "created": "2023-01-04T03:25:17.530Z",
            "sortNum": 90000
        },
        {
            "_id": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
            "name": "Log In",
            "containerId": "9e5e3dea-82d6-4ea7-913b-e3888664742b",
            "created": "2023-01-15T14:00:38.067Z",
            "sortNum": 100000
        },
        {
            "_id": "cc8fc31f-2302-4a24-82d6-c8e105e4fb56",
            "name": "Log Out",
            "containerId": "9e5e3dea-82d6-4ea7-913b-e3888664742b",
            "created": "2023-01-15T14:43:21.836Z",
            "sortNum": 110000
        },
        {
            "_id": "f62cde80-bbf3-4652-a40a-eb8e1878e747",
            "name": "Reissue Token",
            "containerId": "9e5e3dea-82d6-4ea7-913b-e3888664742b",
            "created": "2023-01-15T15:09:46.603Z",
            "sortNum": 120000
        },
        {
            "_id": "d39772e1-109e-4fba-924e-6ab90a3e5277",
            "name": "Get ongoing & upcoming contests (for logged-out users)",
            "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "created": "2023-01-15T15:31:49.190Z",
            "sortNum": 130000
        },
        {
            "_id": "05ffbb82-5894-4752-9025-0ac933930903",
            "name": "Get contest by ID",
            "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "created": "2023-01-15T15:35:34.279Z",
            "sortNum": 140000
        },
        {
            "_id": "5c0a9108-1d33-407e-91bc-ae25b89bcfe7",
            "name": "Get group's ongoing & upcoming contests",
            "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "created": "2023-01-15T15:35:57.785Z",
            "sortNum": 150000
        },
        {
            "_id": "4b515a9e-2c7f-46c3-aef5-809b6f2c322f",
            "name": "Get group's contest by ID",
            "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "created": "2023-01-15T15:36:07.930Z",
            "sortNum": 160000
        },
        {
            "_id": "fee4c6ed-cf6b-45c1-830b-ae840a325a19",
            "name": "Participate group's contest",
            "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "created": "2023-01-15T15:36:19.697Z",
            "sortNum": 170000
        },
        {
            "_id": "ecac38fa-17f6-43e7-a6f3-1ddc4de2ed11",
            "name": "Get Open Space Workbook List",
            "containerId": "b31b0cce-32af-4db8-b281-76478bf9e920",
            "created": "2023-01-30T07:53:57.106Z",
            "sortNum": 180000
        },
        {
            "_id": "ee01069f-f88f-4841-9cf1-921fd2521372",
            "name": "Get Group Workbook List",
            "containerId": "b31b0cce-32af-4db8-b281-76478bf9e920",
            "created": "2023-01-30T07:55:26.515Z",
            "sortNum": 190000
        },
        {
            "_id": "f8458b9c-c963-421d-9b18-5d2c187f6924",
            "name": "Get One Workbook",
            "containerId": "b31b0cce-32af-4db8-b281-76478bf9e920",
            "created": "2023-01-30T07:55:39.530Z",
            "sortNum": 185000
        },
        {
            "_id": "07a63926-167d-4dce-8daa-10b3f0d139a0",
            "name": "Get One Group Workbook",
            "containerId": "b31b0cce-32af-4db8-b281-76478bf9e920",
            "created": "2023-01-30T07:56:24.906Z",
            "sortNum": 210000
        },
        {
            "_id": "bc4889c3-e722-4c5f-a571-1757b310e3bb",
            "name": "Create One Workbook",
            "containerId": "b31b0cce-32af-4db8-b281-76478bf9e920",
            "created": "2023-01-31T13:53:56.277Z",
            "sortNum": 220000
        },
        {
            "_id": "8800f872-5218-45ef-83ce-676626c54cce",
            "name": "Delete One Workbook",
            "containerId": "b31b0cce-32af-4db8-b281-76478bf9e920",
            "created": "2023-01-31T13:54:03.925Z",
            "sortNum": 230000
        },
        {
            "_id": "8a42bead-603a-4667-a09a-8e351f983f7c",
            "name": "Update One Workbook",
            "containerId": "b31b0cce-32af-4db8-b281-76478bf9e920",
            "created": "2023-01-31T13:54:15.444Z",
            "sortNum": 240000
        },
        {
            "_id": "df830ccf-ea06-40c9-9dec-69679e90a91a",
            "name": "Get all notices",
            "containerId": "1974437e-c319-43a2-a67f-c7bf6c7fb000",
            "created": "2023-02-01T07:01:45.003Z",
            "sortNum": 180000
        },
        {
            "_id": "dd6c1845-45b9-42a0-baab-d32bbf753f0f",
            "name": "Get notice by ID",
            "containerId": "1974437e-c319-43a2-a67f-c7bf6c7fb000",
            "created": "2023-02-01T07:01:55.329Z",
            "sortNum": 190000
        },
        {
            "_id": "162021f9-d9b8-4acb-880a-fac122d0fadf",
            "name": "Get group's all notices",
            "containerId": "1974437e-c319-43a2-a67f-c7bf6c7fb000",
            "created": "2023-02-01T07:02:14.789Z",
            "sortNum": 200000
        },
        {
            "_id": "314f4a3d-0379-44c7-b253-caaeddca2bb8",
            "name": "Get group's notice by ID",
            "containerId": "1974437e-c319-43a2-a67f-c7bf6c7fb000",
            "created": "2023-02-01T07:02:23.769Z",
            "sortNum": 210000
        },
        {
            "_id": "dcc8290a-fa46-4ad9-b9a1-f2f422fe2006",
            "name": "Util",
            "containerId": "",
            "created": "2023-02-04T06:18:57.390Z",
            "sortNum": 260000
        },
        {
            "_id": "e887d9a5-3376-440c-8411-9d99a5881f6a",
            "name": "Reset Password",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-04T06:21:30.612Z",
            "sortNum": 270000
        },
        {
            "_id": "36691b67-944b-4450-91a2-51c74b45688a",
            "name": "Send Pin for Password Reset",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-04T06:21:40.113Z",
            "sortNum": 135000
        },
        {
            "_id": "6d283a69-e74c-49e2-b5b0-dde19238cfd1",
            "name": "Get User Profile",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-04T06:21:46.754Z",
            "sortNum": 290000
        },
        {
            "_id": "d778da2a-c38e-4bc4-a9a7-146fbd728295",
            "name": "Delete Own Account",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-04T06:22:13.661Z",
            "sortNum": 288750
        },
        {
            "_id": "50cd7ae2-a924-4930-a42b-ed37e850f6fe",
            "name": "Send Pin to New Email",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-04T06:22:50.495Z",
            "sortNum": 202500
        },
        {
            "_id": "3a424d2b-2fb8-4b0a-8b1d-772d11597261",
            "name": "Verify Pin and Issue Jwt",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-04T12:51:01.484Z",
            "sortNum": 236250
        },
        {
            "_id": "b2a0a2ac-e83c-4e01-816c-b402fc61b190",
            "name": "Sign Up",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-06T08:54:22.761Z",
            "sortNum": 287500
        },
        {
            "_id": "de080044-6fb5-4591-9d2d-b240e336f5b1",
            "name": "Update Real Name",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-15T04:42:41.623Z",
            "sortNum": 300000
        },
        {
            "_id": "5331b192-c3f2-427b-aaf6-561b463e95d4",
            "name": "Update Email",
            "containerId": "49663314-46e5-45f0-8e80-dc67b077d3c4",
            "created": "2023-02-15T04:42:55.782Z",
            "sortNum": 295000
        },
        {
            "_id": "349d820f-c076-4ace-9b0e-45edbe7cd092",
            "name": "Get all problems",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T07:11:10.926Z",
            "sortNum": 320000
        },
        {
            "_id": "f68db2c1-ea03-4a15-9c27-04be05d538cc",
            "name": "Get problem by ID",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T07:11:20.672Z",
            "sortNum": 330000
        },
        {
            "_id": "a0ffa22b-5f6f-4f72-a51c-a6f41a8d0fb5",
            "name": "Get contest's all problems",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T08:32:47.610Z",
            "sortNum": 350000
        },
        {
            "_id": "c2d36560-f0a0-4f8f-b342-21b156aa6073",
            "name": "Get contest's problem by ID",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T08:40:53.105Z",
            "sortNum": 360000
        },
        {
            "_id": "215c0fc7-d9a4-4c3b-9d6d-166cbdc3c575",
            "name": "Get workbook's all problems",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T08:49:18.982Z",
            "sortNum": 380000
        },
        {
            "_id": "ca6363a9-53a8-4670-bff7-512a4bbb3a12",
            "name": "Get workbook's problem by ID",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T08:49:30.867Z",
            "sortNum": 390000
        },
        {
            "_id": "f496267d-284b-48b9-9d06-513f7760b811",
            "name": "Get group contest's all problems",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T08:49:52.973Z",
            "sortNum": 400000
        },
        {
            "_id": "da3fe5e3-b148-49c1-9b8f-c3b93a993fe2",
            "name": "Get group contest's problem by ID",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T08:50:09.326Z",
            "sortNum": 410000
        },
        {
            "_id": "8a6f0fa5-98f7-4c1b-9834-6b034f289d5b",
            "name": "Get group workbook's all problems",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T08:50:24.368Z",
            "sortNum": 420000
        },
        {
            "_id": "c7cea337-d5d2-457d-8876-f860a61852ef",
            "name": "Get group workbook's problem by ID",
            "containerId": "589c8657-8198-4b4f-96f0-b90f5c6af633",
            "created": "2023-02-17T08:50:38.854Z",
            "sortNum": 430000
        },
        {
            "_id": "e69f258a-3604-45e3-92fd-f87e9f25c64a",
            "name": "Join group by id",
            "containerId": "a9aa5ec4-bc54-44ba-adf1-f2cb4ee6876a",
            "created": "2023-02-21T00:47:40.432Z",
            "sortNum": 440000
        },
        {
            "_id": "64dbfafd-a97c-478d-9551-21c89d441ebe",
            "name": "Leave group",
            "containerId": "a9aa5ec4-bc54-44ba-adf1-f2cb4ee6876a",
            "created": "2023-02-21T01:56:19.441Z",
            "sortNum": 460000
        },
        {
            "_id": "607d4957-04bd-445a-bc2a-36d2a65c9047",
            "name": "Get Groups",
            "containerId": "a9aa5ec4-bc54-44ba-adf1-f2cb4ee6876a",
            "created": "2023-02-21T06:11:27.968Z",
            "sortNum": 220000
        },
        {
            "_id": "4130bc7d-5b08-4f36-a173-fc2c3a0b24fb",
            "name": "Get Joined Groups",
            "containerId": "a9aa5ec4-bc54-44ba-adf1-f2cb4ee6876a",
            "created": "2023-02-21T06:36:18.718Z",
            "sortNum": 330000
        },
        {
            "_id": "18cc4c2b-1889-43b3-8d3d-8b2f6d453ed3",
            "name": "Get Group",
            "containerId": "a9aa5ec4-bc54-44ba-adf1-f2cb4ee6876a",
            "created": "2023-02-21T06:59:56.870Z",
            "sortNum": 110000
        },
        {
            "_id": "dc4b1bd7-bc6f-4a48-b5b1-bd0026d8e3f2",
            "name": "Get group members",
            "containerId": "a9aa5ec4-bc54-44ba-adf1-f2cb4ee6876a",
            "created": "2023-02-21T08:14:57.850Z",
            "sortNum": 385000
        },
        {
            "_id": "d9b60a8b-4f6a-48c0-a9e8-bcab5069cc24",
            "name": "Get group leaders",
            "containerId": "a9aa5ec4-bc54-44ba-adf1-f2cb4ee6876a",
            "created": "2023-02-21T08:15:14.474Z",
            "sortNum": 412500
        },
        {
            "_id": "8b4393e5-4001-4f7d-9f41-cce5ef02a10b",
            "name": "Get ongoing & upcoming contests (for logged-in users)",
            "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "created": "2023-03-02T11:08:27.602Z",
            "sortNum": 135000
        },
        {
            "_id": "1e9d4bed-ed09-409a-a12c-676571aa8354",
            "name": "Get finished contests",
            "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "created": "2023-04-10T07:27:02.158Z",
            "sortNum": 135000
        },
        {
            "_id": "0e51dd91-afe6-4bcd-835d-b3df3d2b6f07",
            "name": "Get group's finished contests",
            "containerId": "4ca3b3af-2477-4c0c-98a9-64d2f10277f6",
            "created": "2023-04-10T07:34:16.185Z",
            "sortNum": 155000
        },
        {
            "_id": "1915cbb0-7526-495a-8416-d43a703f3b16",
            "name": "Admin User",
            "containerId": "",
            "created": "2023-06-15T10:59:58.751Z",
            "sortNum": 440000
        },
        {
            "_id": "209bec3c-0449-4d8b-9216-1bb92afc77af",
            "name": "User Create",
            "containerId": "1915cbb0-7526-495a-8416-d43a703f3b16",
            "created": "2023-06-15T11:00:13.467Z",
            "sortNum": 450000
        },
        {
            "_id": "6a7d0144-918c-4112-9774-f941d25b3f67",
            "name": "User Delete",
            "containerId": "1915cbb0-7526-495a-8416-d43a703f3b16",
            "created": "2023-06-15T11:00:19.907Z",
            "sortNum": 460000
        },
        {
            "_id": "b089f8be-93f3-41e6-b8d9-b7f5e71f85ca",
            "name": "User Read",
            "containerId": "1915cbb0-7526-495a-8416-d43a703f3b16",
            "created": "2023-06-15T11:00:27.545Z",
            "sortNum": 455000
        },
        {
            "_id": "788c0112-2ded-4ce6-86e1-598aae69b21e",
            "name": "User Update",
            "containerId": "1915cbb0-7526-495a-8416-d43a703f3b16",
            "created": "2023-06-15T11:00:47.722Z",
            "sortNum": 457500
        },
        {
            "_id": "48547883-d35f-483f-a8d4-87a746611eb7",
            "name": "Clarification",
            "containerId": "",
            "created": "2023-06-24T06:38:03.122Z",
            "sortNum": 15000
        },
        {
            "_id": "af51ee2a-b6a3-4162-9b37-9d7741ffd67e",
            "name": "Get Clarifications by Group Contest",
            "containerId": "48547883-d35f-483f-a8d4-87a746611eb7",
            "created": "2023-06-24T06:38:52.458Z",
            "sortNum": 480000
        },
        {
            "_id": "07c06f7a-4664-48a7-a7a1-2eef5942f39b",
            "name": "Get Clarifications by Problem",
            "containerId": "48547883-d35f-483f-a8d4-87a746611eb7",
            "created": "2023-06-24T06:39:24.167Z",
            "sortNum": 490000
        },
        {
            "_id": "7b4a93f3-807f-40e9-a830-8ba1d261ccb9",
            "name": "Get Clarifications by Contest",
            "containerId": "48547883-d35f-483f-a8d4-87a746611eb7",
            "created": "2023-06-24T07:04:33.600Z",
            "sortNum": 240000
        },
        {
            "_id": "ff1c5805-4fdd-44d4-ba67-f10ad9a06368",
            "name": "Get Clarifications by Group Problem",
            "containerId": "48547883-d35f-483f-a8d4-87a746611eb7",
            "created": "2023-06-24T07:15:39.073Z",
            "sortNum": 500000
        }
    ],
    "settings": {
        "headers": [],
        "auth": {
            "type": "bearer",
            "bearer": "{{bearer_token}}"
        },
        "tests": [],
        "options": {
            "baseUrl": "http://localhost:4000"
        }
    },
    "requests": [
        {
            "_id": "fd33c48d-00af-4dea-b600-449bef7e5bea",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
            "name": "Succeed",
            "url": "/auth/login",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-01-04T03:25:24.818Z",
            "modified": "2023-02-21T01:20:16.961Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"Adminadmin\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                },
                {
                    "type": "custom-header",
                    "custom": "Authorization",
                    "action": "contains",
                    "value": "Bearer"
                },
                {
                    "type": "custom-header",
                    "custom": "Set-Cookie",
                    "action": "contains",
                    "value": "refresh_token"
                },
                {
                    "type": "set-env-var",
                    "custom": "header.authorization",
                    "action": "setto",
                    "value": "{{bearer_token}}"
                },
                {
                    "type": "set-env-var",
                    "custom": "cookie.refresh_token",
                    "action": "setto",
                    "value": "{{refresh_token}}"
                }
            ],
            "docs": "# Log In\n\n사용자가 올바른 정보로 로그인하면 JWT를 발행합니다.  \n보안을 위해 짧은 만료 시간의 access token과 이를 재발행해주는 긴 만료 시간의 refresh token 두 가지를 발행합니다.\n\n### Access Token\n- `Authrization` header를 통해 bearer token을 발급합니다.\n- Header로 발급되기 때문에, client에 token을 직접 저장하는 코드가 필요합니다.\n- 30분 후 만료됩니다.\n\n### Refresh Token\n- Cookie를 통해 발급합니다. 브라우저에 cookie가 자동으로 저장됩니다.\n- `/auth/reissue`를 통해 access token을 재발급받을 때 필요합니다.\n- **가장 유출에 조심해야하는 값입니다.**\n- 24시간 후 만료됩니다."
        },
        {
            "_id": "c5ccfac6-5e94-4b03-aecb-e357db6157b9",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "cc8fc31f-2302-4a24-82d6-c8e105e4fb56",
            "name": "Succeed",
            "url": "/auth/logout",
            "method": "POST",
            "sortNum": 30000,
            "created": "2023-01-04T03:36:13.805Z",
            "modified": "2023-02-15T05:04:35.551Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                },
                {
                    "type": "set-env-var",
                    "custom": "cookie.refresh_token",
                    "action": "setto",
                    "value": "{{refresh_token}}"
                },
                {
                    "type": "set-env-var",
                    "custom": "null",
                    "action": "setto",
                    "value": "{{bearer_token}}"
                }
            ],
            "docs": "# Log Out\n\nRefresh Token을 무효화하고 cookie에서 삭제합니다.  \nAccess Token은 만료되기 전까지 유효하며, client에서 직접 삭제해야합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "caf44ce8-e6cc-4ca8-84bc-512b0fea903c",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "f62cde80-bbf3-4652-a40a-eb8e1878e747",
            "name": "Succeed",
            "url": "/auth/reissue",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-01-04T03:36:45.663Z",
            "modified": "2023-02-15T05:04:45.817Z",
            "headers": [
                {
                    "name": "Set-Cookie",
                    "value": "refresh_token={{refresh_token}}"
                }
            ],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "custom-header",
                    "custom": "Authorization",
                    "action": "contains",
                    "value": "Bearer"
                },
                {
                    "type": "set-env-var",
                    "custom": "header.authorization",
                    "action": "setto",
                    "value": "{{bearer_token}}"
                }
            ],
            "docs": "# Reissue Token\n\nRefresh token을 이용해 access token을 재발급합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-var-empty",
                        "triggerValue": "{{refresh_token}}"
                    }
                ]
            }
        },
        {
            "_id": "8a6129e2-e8bc-4852-8e6e-568e89f08990",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "d39772e1-109e-4fba-924e-6ab90a3e5277",
            "name": "Succeed",
            "url": "/contest",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-01-04T03:41:11.804Z",
            "modified": "2023-05-16T15:37:31.824Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"ongoing\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"upcoming\""
                }
            ],
            "docs": "# Get all contests\n## 사용자가 로그인이 되지 않은 경우\n\n종료된 대회를 제외한 Open Space의 모든 목록을 불러옵니다.  \n대회의 진행 상태에 따라 구분합니다. (ongoing, upcoming, finished) <br>\n로그인되지 않았으므로 registered는 따로 구분하지 않습니다."
        },
        {
            "_id": "cae53d1e-c7c4-4825-a7f5-96a61a478d70",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "05ffbb82-5894-4752-9025-0ac933930903",
            "name": "Succeed",
            "url": "/contest/1",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-01-04T03:43:05.492Z",
            "modified": "2023-03-02T11:27:38.186Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"startTime\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"endTime\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"group\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"description\""
                }
            ],
            "docs": "# Get contest by ID\n\n대회 정보를 가져옵니다."
        },
        {
            "_id": "df4f680f-9ae5-4f1d-9169-08a9a62b8bcd",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "5c0a9108-1d33-407e-91bc-ae25b89bcfe7",
            "name": "Succeed",
            "url": "/group/2/contest",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-01-04T03:44:08.324Z",
            "modified": "2023-05-16T15:36:50.602Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"registeredOngoing\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"registeredUpcoming\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"ongoing\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"upcoming\""
                }
            ],
            "docs": "# Get group's all contests\n\n종료된 대회를 제외한 그룹의 모든 목록을 불러옵니다.<br>\n대회의 진행 상태에 따라 구분합니다. (registered ongoing, registered upcoming, ongoing, upcoming, finished) <br>\n",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "af8a1447-ee6c-4e13-bf24-7617ffde6f25",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "4b515a9e-2c7f-46c3-aef5-809b6f2c322f",
            "name": "Succeed",
            "url": "/group/1/contest/2",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-01-04T03:44:47.207Z",
            "modified": "2023-03-02T11:03:49.619Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"startTime\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"endTime\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"group\""
                }
            ],
            "docs": "# Get group's all contests\n\n그룹의 종료된 대회를 제외한 목록을 가져옵니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "af8a1447-ee6c-4e13-bf24-7617ffde6f25",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "4b515a9e-2c7f-46c3-aef5-809b6f2c322f",
            "name": "Succeed",
            "url": "/group/1/contest/2",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-01-04T03:44:47.207Z",
            "modified": "2023-02-15T05:05:08.839Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"startTime\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"endTime\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"description\""
                }
            ],
            "docs": "# Get group's contest by ID\n\nGroup의 대회 하나의 정보를 가져옵니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "989c4ce8-2ca8-4b07-847f-4fb37eac729c",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "fee4c6ed-cf6b-45c1-830b-ae840a325a19",
            "name": "Succeed",
            "url": "/group/1/contest/1/participation",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-01-04T03:45:44.318Z",
            "modified": "2023-02-15T05:08:17.158Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                }
            ],
            "docs": "# Participate group's contest\n\nGroup 대회에 참가합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "691cde43-a8df-449e-96e1-a791684024d6",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
            "name": "400: Empty field",
            "url": "/auth/login",
            "method": "POST",
            "sortNum": 20000,
            "created": "2023-01-15T14:01:40.146Z",
            "modified": "2023-01-15T14:40:26.917Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"\",\n  \"password\": \"\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "400"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "username should not be empty"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "password should not be empty"
                }
            ]
        },
        {
            "_id": "91e8faa0-f117-4bf2-8647-baf7de706b8d",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
            "name": "401: Nonexistent user",
            "url": "/auth/login",
            "method": "POST",
            "sortNum": 30000,
            "created": "2023-01-15T14:38:46.092Z",
            "modified": "2023-01-15T14:42:05.047Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"nobody\",\n  \"password\": \"nobody\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Incorrect username or password"
                }
            ]
        },
        {
            "_id": "fbf30bc7-ca8a-4486-b85a-2bec8cf259ea",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8308536f-48e2-4946-bde2-e3b08d89a3aa",
            "name": "401: Incorrect password",
            "url": "/auth/login",
            "method": "POST",
            "sortNum": 40000,
            "created": "2023-01-15T14:40:53.559Z",
            "modified": "2023-01-15T14:42:14.818Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"wrongpassword\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Incorrect username or password"
                }
            ]
        },
        {
            "_id": "f8dde72c-4f3b-4252-bfb7-bc481736dc07",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "cc8fc31f-2302-4a24-82d6-c8e105e4fb56",
            "name": "401: Invalid Token",
            "url": "/auth/logout",
            "method": "POST",
            "sortNum": 40000,
            "created": "2023-01-15T14:58:53.478Z",
            "modified": "2023-02-15T04:51:42.049Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "5a59c618-44a1-40e7-899d-c4edab0095c3",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "c71d18b9-d4d3-43f8-afde-bec6c695c7c9",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "f62cde80-bbf3-4652-a40a-eb8e1878e747",
            "name": "401: Invalid Token",
            "url": "/auth/reissue",
            "method": "GET",
            "sortNum": 20000,
            "created": "2023-01-15T15:25:15.488Z",
            "modified": "2023-02-15T04:52:11.677Z",
            "headers": [
                {
                    "name": "Set-Cookie",
                    "value": "refresh_token={{refresh_token}}"
                }
            ],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "5a59c618-44a1-40e7-899d-c4edab0095c3",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "19dc560d-6f13-44f8-8a9f-6d2af2256715",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "05ffbb82-5894-4752-9025-0ac933930903",
            "name": "404: Nonexistent contest",
            "url": "/contest/0",
            "method": "GET",
            "sortNum": 20000,
            "created": "2023-01-15T15:41:35.396Z",
            "modified": "2023-03-02T11:31:28.501Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "contest does not exist"
                }
            ]
        },
        {
            "_id": "1c598523-6f87-49e0-bedc-bc8686c5dd96",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "4b515a9e-2c7f-46c3-aef5-809b6f2c322f",
            "name": "404: Nonexistent contest",
            "url": "/group/1/contest/0",
            "method": "GET",
            "sortNum": 20000,
            "created": "2023-01-15T15:50:08.931Z",
            "modified": "2023-02-15T05:05:19.512Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "contest does not exist"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "8526d2dc-b8f5-4dc6-873f-09f411e6ca31",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "fee4c6ed-cf6b-45c1-830b-ae840a325a19",
            "name": "403: Already participated",
            "url": "/group/1/contest/1/participation",
            "method": "POST",
            "sortNum": 20000,
            "created": "2023-01-18T07:58:25.651Z",
            "modified": "2023-02-15T05:08:22.517Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "403"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "60733561-b015-4851-8acd-e9684940a30e",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "fee4c6ed-cf6b-45c1-830b-ae840a325a19",
            "name": "404: Nonexistent contest",
            "url": "/group/1/contest/0/participation",
            "method": "POST",
            "sortNum": 30000,
            "created": "2023-01-18T07:59:40.454Z",
            "modified": "2023-02-15T05:08:36.120Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "contest does not exist"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "6614b869-9477-48ac-89e3-610433d1d510",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "fee4c6ed-cf6b-45c1-830b-ae840a325a19",
            "name": "403: Ended contest",
            "url": "/group/1/contest/2/participation",
            "method": "POST",
            "sortNum": 25000,
            "created": "2023-01-18T08:00:24.978Z",
            "modified": "2023-02-15T05:08:29.218Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "403"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "ended contest"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "64abbcae-5508-4ad6-bb13-6ee21ba34ad4",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "ecac38fa-17f6-43e7-a6f3-1ddc4de2ed11",
            "name": "200: OK",
            "url": "/workbook?cursor=1&take=2",
            "method": "GET",
            "sortNum": 50000,
            "created": "2023-01-31T18:01:10.929Z",
            "modified": "2023-03-02T08:06:47.182Z",
            "headers": [],
            "params": [
                {
                    "name": "cursor",
                    "value": "1",
                    "isPath": false
                },
                {
                    "name": "take",
                    "value": "2",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"description\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"updateTime\""
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "2"
                }
            ],
            "docs": "# Get All Workbooks\n\nOpen Space의 workbook 목록을 보여줍니다.\n\n## Query\n\n- `cursor`: (optional) 가져올 아이템의 기준점으로, take 값에 따라 기준점의 앞뒤에 있는 아이템을 가져오게 됩니다. cursor 값은 항상 양수여야 하며, 값을 넘겨주지 않으면 자동으로 첫번째 아이템부터 반환됩니다.\n- `take`: 가져올 아이템의 개수를 지정합니다.\n\n### Examples\n전체 아이템: [1 2 3 4 5 6] / 현재 페이지: [3 4] 일 때  \n\n1. `?cursor=3?take=-2` => [1 2]\n2. `?cursor=4?take=2` => [5 6]\n3. `?take=5` => [1 2 3 4 5]"
        },
        {
            "_id": "efc963b0-4c49-45ee-8901-a9765037a443",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "ee01069f-f88f-4841-9cf1-921fd2521372",
            "name": "200: OK",
            "url": "/group/2/workbook?cursor=6&take=-2",
            "method": "GET",
            "sortNum": 60000,
            "created": "2023-02-01T01:48:09.050Z",
            "modified": "2023-03-02T08:10:10.392Z",
            "headers": [],
            "params": [
                {
                    "name": "cursor",
                    "value": "6",
                    "isPath": false
                },
                {
                    "name": "take",
                    "value": "-2",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"description\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"updateTime\""
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "2"
                }
            ],
            "docs": "# Get Group Workbook List\n\n그룹의 workbook 목록을 가져옵니다.\n\n## Query\n\n- `cursor`: (optional) 가져올 아이템의 기준점으로, take 값에 따라 기준점의 앞뒤에 있는 아이템을 가져오게 됩니다. cursor 값은 항상 양수여야 하며, 값을 넘겨주지 않으면 자동으로 첫번째 아이템부터 반환됩니다.\n- `take`: 가져올 아이템의 개수를 지정합니다.\n\n### Examples\n전체 아이템: [1 2 3 4 5 6] / 현재 페이지: [3 4] 일 때  \n\n1. `?cursor=3?take=-2` => [1 2]\n2. `?cursor=4?take=2` => [5 6]\n3. `?take=5` => [1 2 3 4 5]",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "d3faa14f-9168-4f9c-9f3c-17505e4ec56a",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "07a63926-167d-4dce-8daa-10b3f0d139a0",
            "name": "200: OK",
            "url": "/group/2/workbook/2",
            "method": "GET",
            "sortNum": 70000,
            "created": "2023-02-01T06:59:43.886Z",
            "modified": "2023-02-15T05:12:55.005Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"createdById\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"groupId\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"description\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"visible\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"createTime\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"updateTime\""
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "c954a87c-4915-4fad-bd02-7898fcfd50b5",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "df830ccf-ea06-40c9-9dec-69679e90a91a",
            "name": "Succeed",
            "url": "/notice?take=3",
            "method": "GET",
            "sortNum": 60000,
            "created": "2023-02-01T07:02:36.251Z",
            "modified": "2023-03-02T07:51:26.976Z",
            "headers": [],
            "params": [
                {
                    "name": "take",
                    "value": "3",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\": 1"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\": 2"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\": 3"
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "3"
                }
            ],
            "docs": "# Get all notices\n\nOpen space의 공지사항을 불러옵니다.\n\n## Query\n\n- `cursor`: (optional) 가져올 아이템의 기준점으로, take 값에 따라 기준점의 앞뒤에 있는 아이템을 가져오게 됩니다. cursor 값은 항상 양수여야 하며, 값을 넘겨주지 않으면 자동으로 첫번째 아이템부터 반환됩니다.\n- `take`: 가져올 아이템의 개수를 지정합니다.\n\n### Examples\n전체 아이템: [1 2 3 4 5 6] / 현재 페이지: [3 4] 일 때  \n\n1. `?cursor=3?take=-2` => [1 2]\n2. `?cursor=4?take=2` => [5 6]\n3. `?take=5` => [1 2 3 4 5]"
        },
        {
            "_id": "f4c615bd-92ae-424a-8bc5-4d5e74a0f3d5",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "f8458b9c-c963-421d-9b18-5d2c187f6924",
            "name": "200: OK",
            "url": "/workbook/1",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-02-01T07:05:06.328Z",
            "modified": "2023-03-23T08:32:35.585Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                }
            ]
        },
        {
            "_id": "db87ecfe-a5fd-4358-87bf-15e8e66be43a",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "bc4889c3-e722-4c5f-a571-1757b310e3bb",
            "name": "201: OK",
            "url": "/admin/group/2/workbook",
            "method": "POST",
            "sortNum": 80000,
            "created": "2023-02-01T07:05:49.259Z",
            "modified": "2023-02-15T05:13:09.653Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"title\": \"title of workbook\",\n  \"description\": \"description of workbook\",\n  \"visible\": true\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "79827994-2106-4b50-bed0-3db1f5290d7f",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8800f872-5218-45ef-83ce-676626c54cce",
            "name": "200: OK",
            "url": "/admin/group/2/workbook/2",
            "method": "DELETE",
            "sortNum": 90000,
            "created": "2023-02-01T07:10:05.193Z",
            "modified": "2023-02-15T05:14:42.376Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ],
            "docs": "## 주의사항\ndelete api로 요청을 보내시면 id가 2인 seed data가 사라집니다. seed data를 복구하고 싶으시면 backend/에서 다음 명령어를 입력하세요.\n- `pnpm prisma migrate reset`",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "521880e4-c1ef-411d-b45d-3813f868df6d",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dd6c1845-45b9-42a0-baab-d32bbf753f0f",
            "name": "Succeed",
            "url": "/notice/2",
            "method": "GET",
            "sortNum": 70000,
            "created": "2023-02-01T07:10:51.588Z",
            "modified": "2023-02-01T07:13:09.203Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"content\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"prev\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"next\""
                }
            ],
            "docs": "# Get notice by ID\n\n공지사항 하나의 자세한 정보를 불러옵니다."
        },
        {
            "_id": "9906591a-fce6-4cde-b6e2-7abd74138990",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8a42bead-603a-4667-a09a-8e351f983f7c",
            "name": "200: OK",
            "url": "/admin/group/2/workbook/2",
            "method": "PUT",
            "sortNum": 100000,
            "created": "2023-02-01T07:12:44.273Z",
            "modified": "2023-02-15T05:13:35.270Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"title\": \"updated title of workbook\",\n  \"description\": \"updated description of workbook\",\n  \"visible\": true\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "3180d03d-eda4-4e5c-8f90-813b04678fa8",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dd6c1845-45b9-42a0-baab-d32bbf753f0f",
            "name": "404: Nonexistent notice",
            "url": "/notice/0",
            "method": "GET",
            "sortNum": 80000,
            "created": "2023-02-01T07:13:30.858Z",
            "modified": "2023-02-01T07:13:49.639Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ]
        },
        {
            "_id": "1af21194-f768-4f41-a382-80c28db2bcce",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "314f4a3d-0379-44c7-b253-caaeddca2bb8",
            "name": "Succeed",
            "url": "/group/1/notice/2",
            "method": "GET",
            "sortNum": 100000,
            "created": "2023-02-01T07:16:58.009Z",
            "modified": "2023-02-01T07:19:48.673Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"title\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"content\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"prev\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"next"
                }
            ],
            "docs": "# Get group's notice by ID\n\nGroup의 공지사항의 자세한 정보를 가져옵니다."
        },
        {
            "_id": "576ee68b-a00a-4686-9ef6-96b31a97a8ae",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8800f872-5218-45ef-83ce-676626c54cce",
            "name": "404: Not Found",
            "url": "/admin/group/2/workbook/0",
            "method": "DELETE",
            "sortNum": 100000,
            "created": "2023-02-01T07:22:42.587Z",
            "modified": "2023-02-15T05:13:49.352Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ],
            "docs": "## 주의사항\ndelete api로 요청을 보내시면 id가 2인 seed data가 사라집니다. seed data를 복구하고 싶으시면 backend/에서 다음 명령어를 입력하세요.\n- `pnpm prisma migrate reset`\n\n## Not Found Error\n- workbook/:workbookId 의 workbook id가 db에 없을 때 발생합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "61098ad0-eccf-4ea3-ace9-c5a23b31c0a8",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8a42bead-603a-4667-a09a-8e351f983f7c",
            "name": "404: Not Found",
            "url": "/admin/group/2/workbook/0",
            "method": "PUT",
            "sortNum": 110000,
            "created": "2023-02-01T07:22:57.836Z",
            "modified": "2023-02-15T05:13:56.345Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"title\": \"updated title of workbook\",\n  \"description\": \"updated description of workbook\",\n  \"visible\": true\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ],
            "docs": "## Not Found Error\n- workbook/:workbookId 의 workbook id가 db에 없을 때 발생합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "fc5ba97b-1e06-4c6d-b1b3-ed6e0d8c6e14",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "50cd7ae2-a924-4930-a42b-ed37e850f6fe",
            "name": "Succeed",
            "url": "/email-auth/send-email/register-new",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-02-04T06:10:35.871Z",
            "modified": "2023-02-15T05:47:38.170Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"email\": \"skkucp@gmail.com\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "equal",
                    "value": "Email authentication pin is sent to your email address"
                }
            ],
            "docs": "# Send Email\n\n사용자가 가입을 시도하면 확인을 위해 기입한 이메일로 핀을 전송합니다.  \n해당 이메일로 가입된 다른 유저가 있을 경우 이메일이 전송되지 않고 가입이 차단됩니다."
        },
        {
            "_id": "1a62bc1b-fbff-4f01-bbb8-bbf08974ea80",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dcc8290a-fa46-4ad9-b9a1-f2f422fe2006",
            "name": "Log In as SuperAdmin",
            "url": "/auth/login",
            "method": "POST",
            "sortNum": 65000,
            "created": "2023-02-04T06:19:10.115Z",
            "modified": "2023-02-15T04:47:51.109Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"super\",\n  \"password\": \"Supersuper\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "set-env-var",
                    "custom": "header.authorization",
                    "action": "setto",
                    "value": "{{bearer_token}}"
                },
                {
                    "type": "set-env-var",
                    "custom": "cookie.refresh_token",
                    "action": "setto",
                    "value": "{{refresh_token}}"
                }
            ]
        },
        {
            "_id": "0b01e633-3ba5-4925-b679-3f80a1873e97",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "36691b67-944b-4450-91a2-51c74b45688a",
            "name": "Succeed",
            "url": "/email-auth/send-email/password-reset",
            "method": "POST",
            "sortNum": 10000,
            "created": "2023-02-04T06:24:00.834Z",
            "modified": "2023-02-15T03:50:47.317Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"email\": \"skkucodingplatform@gmail.com\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "equal",
                    "value": "Email authentication pin is sent to your email address"
                }
            ],
            "docs": "# Send Email for Password Reset\n\n비밀번호 재설정을 위해 입력된 이메일로 본인 확인용 핀을 전송합니다.  \n해당 이메일로 가입된 유저가 없을 경우 이메일이 전송되지 않습니다.  "
        },
        {
            "_id": "c6022466-99cd-4f7e-b06d-15268b720f57",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "6d283a69-e74c-49e2-b5b0-dde19238cfd1",
            "name": "Succeed",
            "url": "/user",
            "method": "GET",
            "sortNum": 120000,
            "created": "2023-02-04T06:28:28.347Z",
            "modified": "2023-02-15T05:48:15.121Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "username"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "role"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "email"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "lastLogin"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "updateTime"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "userProfile"
                }
            ],
            "docs": "# Get User Profile\n\n사용자의 프로필 정보를 가져옵니다. 로그인 상태가 아닐 경우 프로필을 가져오지 않습니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "64c3b07a-ac38-4b9e-b402-7757ef83b3ba",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "6d283a69-e74c-49e2-b5b0-dde19238cfd1",
            "name": "401: Nonexistent User",
            "url": "/user",
            "method": "GET",
            "sortNum": 150000,
            "created": "2023-02-04T06:31:57.457Z",
            "modified": "2023-02-04T06:33:01.422Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Unauthorized"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "c5ccfac6-5e94-4b03-aecb-e357db6157b9",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "251f46a8-e842-46ae-8e4d-89a57d3e3fb7",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "e887d9a5-3376-440c-8411-9d99a5881f6a",
            "name": "Succeed",
            "url": "/user/password-reset",
            "method": "PATCH",
            "sortNum": 170000,
            "created": "2023-02-04T06:35:06.560Z",
            "modified": "2023-02-15T12:32:36.713Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"newPassword\": \"Supersuper\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Password Reset successfully"
                }
            ],
            "docs": "# Reset Password\n\n**⚠️ 이 리퀘스트를 보내기 전에 Send Pin for Password Reset -> Verify Pin and Issue Jwt  리퀘스트를 차례로 보내주세요.**  \n\n리퀘스트로 받은 새로운 비밀번호로 비밀번호를 재설정합니다.  \n핀으로 본인 확인을 마치지 않았거나, 새로운 비밀번호가 유효하지 않을 경우 비밀번호를 재설정하지 않습니다.\n\n### Bad Password\n- 8자 미만\n- 소문자, 대문자, 숫자, 특수문자 중 2가지 이상의 조합이 아님"
        },
        {
            "_id": "51dd9387-6b96-4bb6-8d37-f3fff1768bf2",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "e887d9a5-3376-440c-8411-9d99a5881f6a",
            "name": "422: Bad Password",
            "url": "/user/password-reset",
            "method": "PATCH",
            "sortNum": 180000,
            "created": "2023-02-04T06:46:43.263Z",
            "modified": "2023-02-15T03:51:01.289Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"newPassword\": \"badpassword\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Bad password"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a62bc1b-fbff-4f01-bbb8-bbf08974ea80",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "6584d0c4-0f1c-4b8a-8649-94d3e6d71d30",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "50cd7ae2-a924-4930-a42b-ed37e850f6fe",
            "name": "422: Duplicate Email",
            "url": "/email-auth/send-email/register-new",
            "method": "POST",
            "sortNum": 20000,
            "created": "2023-02-04T12:44:36.428Z",
            "modified": "2023-02-04T12:45:14.432Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"email\": \"skkucodingplatform@gmail.com\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "This email is already used"
                }
            ]
        },
        {
            "_id": "471ff6ce-dbd1-4ee0-969a-72e4d8d4fbef",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "36691b67-944b-4450-91a2-51c74b45688a",
            "name": "401: Unauthorized",
            "url": "/email-auth/send-email/password-reset",
            "method": "POST",
            "sortNum": 20000,
            "created": "2023-02-04T12:46:01.478Z",
            "modified": "2023-02-15T05:47:12.268Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"email\": \"skkucp@gmail.com\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Cannot find a registered user whose email address is"
                }
            ]
        },
        {
            "_id": "d346ad0a-d895-4ce4-8245-6bc8b07297d9",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "3a424d2b-2fb8-4b0a-8b1d-772d11597261",
            "name": "Succeed",
            "url": "/email-auth/verify-pin",
            "method": "POST",
            "sortNum": 190000,
            "created": "2023-02-04T12:51:09.929Z",
            "modified": "2023-02-15T12:31:49.033Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"pin\": \"798435\",\n  \"email\": \"sori2511@gmail.com\" // Email address that received pin\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                },
                {
                    "type": "set-env-var",
                    "custom": "header.email-auth",
                    "action": "setto",
                    "value": "{{email_token}}"
                }
            ],
            "docs": "# Verify Pin and Issue Jwt\n\n**⚠️ 이 리퀘스트를 보내기 전에 Send Pin for Password Reset 혹은 Send Pin to New Email 리퀘스트를 먼저 보내주세요.**  \n\n리퀘스트로 전송된 핀과 메일로 전송된 핀이 일치하면 Access 토큰을 발행합니다.  \n해당 토큰은 Reset Password와 Sign Up 과정을 수행하는 데 필수적입니다.  \n\n### Request Body\n리퀘스트 바디의 `pin`, `email`은 수동으로 입력해야 합니다.\nSend Email 과정에서 메일을 받은 이메일 주소를 `email`에, 전송받은 핀을 `pin`에 기입하여 리퀘스트를 보내주세요.\n\n### Access Token\n- `Authrization` header를 통해 bearer token을 발급합니다."
        },
        {
            "_id": "fe911128-f592-4015-b2ce-c5ab16a82a53",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "b2a0a2ac-e83c-4e01-816c-b402fc61b190",
            "name": "Succeed",
            "url": "/user/sign-up",
            "method": "POST",
            "sortNum": 200000,
            "created": "2023-02-06T08:54:36.128Z",
            "modified": "2023-02-15T12:33:03.015Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"test\",\n  \"password\": \"it'smehi\",\n  \"email\": \"sori2511@gmail.com\",\n  \"realName\": \"MyeongRyunLee\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                }
            ],
            "docs": "# Reset Password\n\n**⚠️ 이 리퀘스트를 보내기 전에 Send Pin to New Email -> Verify Pin and Issue Jwt  리퀘스트를 차례로 보내주세요.**  \n\n리퀘스트로 받은 정보를 바탕으로 유저를 가입시킵니다.\n핀으로 본인의 이메일임이 확인이 되지 않은 경우, 핀으로 확인된 이메일이 아닌 다른 이메일로 가입을 시도하는 경우, 그리고 username 혹은 password가 유효하지 않을 경우에는 가입이 거부됩니다.\n\n### Bad Username\n- 3자 미만 혹은 10자 초과\n- 소문자, 숫자 외의 문자 포함\n\n\n### Bad Password\n- 8자 미만\n- 소문자, 대문자, 숫자, 특수문자 중 2가지 이상의 조합이 아님"
        },
        {
            "_id": "4e632b66-abd9-4416-a70b-138e9bb6056e",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "3a424d2b-2fb8-4b0a-8b1d-772d11597261",
            "name": "500: Invalid Pin",
            "url": "/email-auth/verify-pin",
            "method": "POST",
            "sortNum": 200000,
            "created": "2023-02-15T03:36:24.801Z",
            "modified": "2023-02-15T03:51:53.040Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"pin\": \"0\",\n  \"email\": \"skkucp@gmail.com\" // Your email\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "500"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "PIN not found or invalid PIN"
                }
            ]
        },
        {
            "_id": "45554ac6-87d2-46c9-9450-c8c1d29a7923",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "b2a0a2ac-e83c-4e01-816c-b402fc61b190",
            "name": "422: Bad Password",
            "url": "/user/sign-up",
            "method": "POST",
            "sortNum": 220000,
            "created": "2023-02-15T03:53:11.459Z",
            "modified": "2023-02-15T12:33:20.887Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"test\",\n  \"password\": \"badpassword\",\n  \"email\": \"skkucp@gmail.com\",\n  \"realName\": \"MyeongRyunLee\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Bad password"
                }
            ]
        },
        {
            "_id": "1010394b-64e8-434b-842a-57e096d36c3a",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "b2a0a2ac-e83c-4e01-816c-b402fc61b190",
            "name": "401: Unauthorized",
            "url": "/user/sign-up",
            "method": "POST",
            "sortNum": 205000,
            "created": "2023-02-15T03:53:29.316Z",
            "modified": "2023-02-15T04:07:09.120Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"test\",\n  \"password\": \"it'smehi\",\n  \"email\": \"skkucp@gmail.com\",\n  \"realName\": \"MyeongRyunLee\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Invalid token: jwt must be provided"
                }
            ]
        },
        {
            "_id": "5355cb23-4a06-4469-8cd1-87b17b442cb8",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "b2a0a2ac-e83c-4e01-816c-b402fc61b190",
            "name": "422: Bad Username",
            "url": "/user/sign-up",
            "method": "POST",
            "sortNum": 207500,
            "created": "2023-02-15T03:56:01.930Z",
            "modified": "2023-02-15T12:33:35.848Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"bad username\",\n  \"password\": \"it'smehi\",\n  \"email\": \"skkucp@gmail.com\",\n  \"realName\": \"MyeongRyunLee\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Bad username"
                }
            ]
        },
        {
            "_id": "5b50b69b-e841-4a73-bc97-4cd821bab9d1",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "e887d9a5-3376-440c-8411-9d99a5881f6a",
            "name": "401: Unauthorized",
            "url": "/user/password-reset",
            "method": "PATCH",
            "sortNum": 175000,
            "created": "2023-02-15T03:59:13.887Z",
            "modified": "2023-02-15T03:59:36.768Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"newPassword\": \"Supersuper\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Invalid token: jwt must be provided"
                }
            ],
            "docs": "# Reset Password\n\n**⚠️ 이 리퀘스트를 보내기 전에 Send Pin for Password Reset -> Verify Pin and Issue Jwt  리퀘스트를 차례로 보내주세요.**  \n\n리퀘스트로 받은 새로운 비밀번호로 비밀번호를 재설정합니다.  \n핀으로 본인 확인을 마치지 않았거나, 새로운 비밀번호가 유효하지 않을 경우 비밀번호를 재설정하지 않습니다.\n\n### Bad Password\n- 8자 이하\n- 소문자, 대문자, 숫자, 특수문자 중 2가지 이상의 조합이 아님"
        },
        {
            "_id": "08d65706-7184-4383-ae4e-3951c24b4d60",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "b2a0a2ac-e83c-4e01-816c-b402fc61b190",
            "name": "422: Not Authenticated",
            "url": "/user/sign-up",
            "method": "POST",
            "sortNum": 206250,
            "created": "2023-02-15T04:04:54.972Z",
            "modified": "2023-02-15T12:34:01.128Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"test\",\n  \"password\": \"it'smehi\",\n  \"email\": \"skkucodingplatform@gmail.com\",\n  \"realName\": \"MyeongRyunLee\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "The email is not authenticated one"
                }
            ],
            "docs": "# Reset Password\n\n**⚠️ 이 리퀘스트를 보내기 전에 Send Pin for Sign Up -> Verify Pin and Issue Jwt  리퀘스트를 차례로 보내주세요.**  \n\n리퀘스트로 받은 정보를 바탕으로 유저를 가입시킵니다.  \n핀으로 본인 확인이 되지 않았거나 username 혹은 password가 유효하지 않을 경우 가입이 되지 않습니다.\n\n### Bad Username\n- 3자 미만 혹은 10자 초과\n- 소문자, 숫자 외의 문자 포함\n\n\n### Bad Password\n- 8자 미만\n- 소문자, 대문자, 숫자, 특수문자 중 2가지 이상의 조합이 아님"
        },
        {
            "_id": "2902f14c-3e97-4dbd-b520-84898231a7c7",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "b2a0a2ac-e83c-4e01-816c-b402fc61b190",
            "name": "422: Duplicate Username",
            "url": "/user/sign-up",
            "method": "POST",
            "sortNum": 206875,
            "created": "2023-02-15T04:09:02.244Z",
            "modified": "2023-02-15T12:33:50.818Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"super\",\n  \"password\": \"it'smehi\",\n  \"email\": \"sori2511@gmail.com\",\n  \"realName\": \"MyeongRyunLee\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Username already exists"
                }
            ]
        },
        {
            "_id": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dcc8290a-fa46-4ad9-b9a1-f2f422fe2006",
            "name": "Log In as Group Leader",
            "url": "/auth/login",
            "method": "POST",
            "sortNum": 75000,
            "created": "2023-02-15T04:31:09.239Z",
            "modified": "2023-02-15T05:06:56.596Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"user01\",\n  \"password\": \"Useruser\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "set-env-var",
                    "custom": "header.authorization",
                    "action": "setto",
                    "value": "{{bearer_token}}"
                },
                {
                    "type": "set-env-var",
                    "custom": "cookie.refresh_token",
                    "action": "setto",
                    "value": "{{refresh_token}}"
                }
            ],
            "docs": "User/Delete Own Account/Succeed 리퀘스트 전송 후에는 작동하지 않을 유틸 리퀘스트입니다.  \n복구를 원한다면 `npx prisma migrate reset`을 실행해주세요."
        },
        {
            "_id": "4b1ec996-565e-4bf5-bad3-f2bb0c8202de",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "d778da2a-c38e-4bc4-a9a7-146fbd728295",
            "name": "Succeed",
            "url": "/user/withdrawal",
            "method": "POST",
            "sortNum": 230000,
            "created": "2023-02-15T04:32:11.015Z",
            "modified": "2023-02-15T05:47:58.534Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"password\": \"Useruser\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                }
            ],
            "docs": "# Delete Own Account\n\n**⚠️ 이 리퀘스트를 보내면 user10이 DB에서 삭제됩니다. 복구를 원한다면 `npx prisma migrate reset`을 실행해주세요.**  \n\n확인용 비밀번호를 받고 로그인한 유저를 탈퇴시킵니다.  \n해당 유저가 존재하지 않거나, 리퀘스트로 받은 비밀번호가 유저의 비밀번호와 일치하지 않으면 탈퇴가 거부됩니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "2219bd59-56e6-4979-887c-15d0bf0a3b02",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "d778da2a-c38e-4bc4-a9a7-146fbd728295",
            "name": "401: Unauthorized",
            "url": "/user/withdrawal",
            "method": "POST",
            "sortNum": 240000,
            "created": "2023-02-15T04:33:04.566Z",
            "modified": "2023-02-15T05:48:04.092Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"password\": \"Useruser\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Unauthorized"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "5a59c618-44a1-40e7-899d-c4edab0095c3",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "16e1a8a4-01d0-4674-9da9-03055d997c00",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "d778da2a-c38e-4bc4-a9a7-146fbd728295",
            "name": "401: Incorrect Password",
            "url": "/user/withdrawal",
            "method": "POST",
            "sortNum": 250000,
            "created": "2023-02-15T04:37:58.196Z",
            "modified": "2023-02-15T05:48:08.783Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"password\": \"incorrectpassword\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Incorrect password"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Unauthorized"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "51a403bb-a032-42b1-b027-6834bed26ad6",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "de080044-6fb5-4591-9d2d-b240e336f5b1",
            "name": "Succeed",
            "url": "/user/realname",
            "method": "PATCH",
            "sortNum": 250000,
            "created": "2023-02-15T04:43:05.467Z",
            "modified": "2023-02-15T05:48:36.073Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"realName\": \"Yuljeon Kim\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "userId"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "createTime"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "updateTime"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a62bc1b-fbff-4f01-bbb8-bbf08974ea80",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "1a00946d-e974-4f75-b8bc-50b5b18c09db",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "de080044-6fb5-4591-9d2d-b240e336f5b1",
            "name": "401: Unauthorized",
            "url": "/user/realname",
            "method": "PATCH",
            "sortNum": 260000,
            "created": "2023-02-15T04:45:19.279Z",
            "modified": "2023-02-15T04:49:37.689Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"realName\": \"Yuljeon Kim\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Unauthorized"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "5a59c618-44a1-40e7-899d-c4edab0095c3",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "5a59c618-44a1-40e7-899d-c4edab0095c3",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dcc8290a-fa46-4ad9-b9a1-f2f422fe2006",
            "name": "Log Out",
            "url": "/auth/logout",
            "method": "POST",
            "sortNum": 85000,
            "created": "2023-02-15T04:45:58.233Z",
            "modified": "2023-02-15T04:47:56.279Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                },
                {
                    "type": "set-env-var",
                    "custom": "cookie.refresh_token",
                    "action": "setto",
                    "value": "{{refresh_token}}"
                },
                {
                    "type": "set-env-var",
                    "custom": "null",
                    "action": "setto",
                    "value": "{{bearer_token}}"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "fd33c48d-00af-4dea-b600-449bef7e5bea",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "51b92ba3-7b43-4ba1-8f91-5c34f71a3d8f",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "162021f9-d9b8-4acb-880a-fac122d0fadf",
            "name": "Succeed",
            "url": "/group/1/notice?cursor=1&take=2",
            "method": "GET",
            "sortNum": 100000,
            "created": "2023-02-15T05:00:13.415Z",
            "modified": "2023-03-02T06:28:47.330Z",
            "headers": [],
            "params": [
                {
                    "name": "cursor",
                    "value": "1",
                    "isPath": false
                },
                {
                    "name": "take",
                    "value": "2",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\": 2"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"id\": 3"
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "5"
                }
            ],
            "docs": "# Get group's all notices\n\n한 group의 모든 공지사항을 불러옵니다.\n\n\n## Query\n\n- `cursor`: (optional) 가져올 아이템의 기준점으로, take 값에 따라 기준점의 앞뒤에 있는 아이템을 가져오게 됩니다. cursor 값은 항상 양수여야 하며, 값을 넘겨주지 않으면 자동으로 첫번째 아이템부터 반환됩니다.\n- `take`: 가져올 아이템의 개수를 지정합니다.\n\n### Examples\n전체 아이템: [1 2 3 4 5 6] / 현재 페이지: [3 4]  \n\n1. `?cursor=3?take=-2` => [1 2]\n2. `?cursor=4?take=2` => [5 6]\n3. `?take=5` => [1 2 3 4 5]",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dcc8290a-fa46-4ad9-b9a1-f2f422fe2006",
            "name": "Log In as User (user10)",
            "url": "/auth/login",
            "method": "POST",
            "sortNum": 80000,
            "created": "2023-02-15T05:05:30.675Z",
            "modified": "2023-02-15T05:10:28.657Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"user10\",\n  \"password\": \"Useruser\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "set-env-var",
                    "custom": "header.authorization",
                    "action": "setto",
                    "value": "{{bearer_token}}"
                },
                {
                    "type": "set-env-var",
                    "custom": "cookie.refresh_token",
                    "action": "setto",
                    "value": "{{refresh_token}}"
                }
            ],
            "docs": "User/Delete Own Account/Succeed 리퀘스트 전송 후에는 작동하지 않을 유틸 리퀘스트입니다.  \n복구를 원한다면 `npx prisma migrate reset`을 실행해주세요."
        },
        {
            "_id": "1b51dcb4-a62b-4632-ac2b-65de72e0c2d5",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "5331b192-c3f2-427b-aaf6-561b463e95d4",
            "name": "Succeed",
            "url": "/user/email",
            "method": "PATCH",
            "sortNum": 270000,
            "created": "2023-02-15T05:20:39.543Z",
            "modified": "2023-02-15T12:53:47.748Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"email\": \"sori2511@gmail.com\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                }
            ],
            "docs": "# Update Email\n\n**⚠️ 이 리퀘스트를 보내기 전에 Send Pin to New Email -> Verify Pin and Issue Jwt  리퀘스트를 차례로 보내주세요.**  \n\n핀으로 본인 확인이 완료된 이메일로 계정의 이메일 정보를 업데이트합니다.  \n핀이 확인되지 않은 경우, 확인된 이메일이 아닌 다른 이메일로 변경하는 경우, 그리고 로그인이 된 상태가 아닌 경우 변경 요청이 거부됩니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "00d4f4c6-5078-4ce4-a4a5-008470f3cc39",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "5331b192-c3f2-427b-aaf6-561b463e95d4",
            "name": "422: Not Authenticated",
            "url": "/user/email",
            "method": "PATCH",
            "sortNum": 280000,
            "created": "2023-02-15T05:28:31.944Z",
            "modified": "2023-02-15T12:34:50.956Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"email\": \"sori2511@gmail.com\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "422"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "The email is not authenticated one"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "5ea0017e-797b-4604-8e78-e0e3e3c11397",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "5331b192-c3f2-427b-aaf6-561b463e95d4",
            "name": "401: Unauthorized",
            "url": "/user/email",
            "method": "PATCH",
            "sortNum": 275000,
            "created": "2023-02-15T05:28:33.055Z",
            "modified": "2023-02-15T12:40:02.598Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"email\": \"sori2511@gmail.com\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "401"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Invalid token: jwt must be provided"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "738d825a-cebb-487e-a1e9-854166c0de59",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "5331b192-c3f2-427b-aaf6-561b463e95d4",
            "name": "404: Not Found",
            "url": "/user/email",
            "method": "PATCH",
            "sortNum": 300000,
            "created": "2023-02-15T05:28:42.869Z",
            "modified": "2023-02-15T13:50:23.746Z",
            "headers": [
                {
                    "name": "email-auth",
                    "value": "{{email_token}}"
                }
            ],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"email\": \"sori2511@gmail.com\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ],
            "docs": "# Update Email\n\n**⚠️ 이 리퀘스트를 보내면 user10이 DB에서 삭제됩니다. 복구를 원한다면 `npx prisma migrate reset`을 실행해주세요.**  \n",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "4b1ec996-565e-4bf5-bad3-f2bb0c8202de",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "810443da-4678-42f6-9696-aeb69e04c2ec",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "349d820f-c076-4ace-9b0e-45edbe7cd092",
            "name": "Succeed",
            "url": "/problem?offset=0&limit=5",
            "method": "GET",
            "sortNum": 330000,
            "created": "2023-02-17T07:12:29.375Z",
            "modified": "2023-02-17T12:22:38.877Z",
            "headers": [],
            "params": [
                {
                    "name": "offset",
                    "value": "0",
                    "isPath": false
                },
                {
                    "name": "limit",
                    "value": "5",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "5"
                }
            ],
            "docs": "# Get all problems\n\nOpen space의 전체 문제를 불러옵니다.\n\n## Query\n\n- `offset`: 몇 번째 item부터 가져올지 정합니다.\n- `limit` :  몇 개의 item을 가져올지 정합니다."
        },
        {
            "_id": "ddf150b6-e269-420f-b49d-0de15e725885",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "f68db2c1-ea03-4a15-9c27-04be05d538cc",
            "name": "Succeed",
            "url": "/problem/1",
            "method": "GET",
            "sortNum": 340000,
            "created": "2023-02-17T08:12:32.095Z",
            "modified": "2023-02-17T09:25:10.425Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.title",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.description",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.languages",
                    "action": "istype",
                    "value": "array"
                },
                {
                    "type": "json-query",
                    "custom": "json.timeLimit",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.memoryLimit",
                    "action": "istype",
                    "value": "number"
                }
            ],
            "docs": "# Get problem by ID\n\n문제 하나의 자세한 정보를 가져옵니다."
        },
        {
            "_id": "3fdd5f68-7c6a-41a7-9125-073d24a62216",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "f68db2c1-ea03-4a15-9c27-04be05d538cc",
            "name": "404: Nonexistent problem",
            "url": "/problem/0",
            "method": "GET",
            "sortNum": 350000,
            "created": "2023-02-17T08:30:41.998Z",
            "modified": "2023-02-17T08:31:31.818Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ]
        },
        {
            "_id": "f55c1bed-5d9a-4b28-8811-e50c70bc9431",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "a0ffa22b-5f6f-4f72-a51c-a6f41a8d0fb5",
            "name": "Succeed",
            "url": "/contest/1/problem?offset=0&limit=5",
            "method": "GET",
            "sortNum": 360000,
            "created": "2023-02-17T08:32:59.424Z",
            "modified": "2023-02-17T12:23:59.745Z",
            "headers": [],
            "params": [
                {
                    "name": "offset",
                    "value": "0",
                    "isPath": false
                },
                {
                    "name": "limit",
                    "value": "5",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "5"
                }
            ],
            "docs": "# Get contest's all problems\n\nOpen space 대회의 전체 문제를 불러옵니다.\n\n## Query\n\n- `offset`: 몇 번째 item부터 가져올지 정합니다.\n- `limit` :  몇 개의 item을 가져올지 정합니다."
        },
        {
            "_id": "3a20799c-6bbf-49f5-9f36-b9c367409654",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "c2d36560-f0a0-4f8f-b342-21b156aa6073",
            "name": "Succeed",
            "url": "/contest/1/problem/1",
            "method": "GET",
            "sortNum": 370000,
            "created": "2023-02-17T08:40:59.570Z",
            "modified": "2023-02-17T09:26:25.747Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.id",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.title",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.description",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.languages",
                    "action": "istype",
                    "value": "array"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.timeLimit",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.memoryLimit",
                    "action": "istype",
                    "value": "number"
                }
            ],
            "docs": "# Get contest's problem by ID\n\nOpen space 문제집의 문제 하나의 자세한 정보를 가져옵니다."
        },
        {
            "_id": "a0869b16-cd43-46e0-b51a-abe94df7d0ab",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "c2d36560-f0a0-4f8f-b342-21b156aa6073",
            "name": "404: Nonexistent problem",
            "url": "/contest/1/problem/0",
            "method": "GET",
            "sortNum": 380000,
            "created": "2023-02-17T08:44:39.160Z",
            "modified": "2023-02-17T08:48:44.199Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ]
        },
        {
            "_id": "2451dc15-22da-485b-bccc-1929b5ab482a",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "215c0fc7-d9a4-4c3b-9d6d-166cbdc3c575",
            "name": "Succeed",
            "url": "/workbook/1/problem?offset=0&limit=5",
            "method": "GET",
            "sortNum": 390000,
            "created": "2023-02-17T08:52:09.057Z",
            "modified": "2023-02-17T12:24:36.689Z",
            "headers": [],
            "params": [
                {
                    "name": "offset",
                    "value": "0",
                    "isPath": false
                },
                {
                    "name": "limit",
                    "value": "5",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "5"
                }
            ],
            "docs": "# Get workbook all problems\n\nOpen space 문제집의 전체 문제를 불러옵니다.\n\n## Query\n\n- `offset`: 몇 번째 item부터 가져올지 정합니다.\n- `limit` :  몇 개의 item을 가져올지 정합니다."
        },
        {
            "_id": "1acd203b-4d23-4405-bb9c-f7923f06d640",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "ca6363a9-53a8-4670-bff7-512a4bbb3a12",
            "name": "Succeed",
            "url": "/workbook/1/problem/1",
            "method": "GET",
            "sortNum": 400000,
            "created": "2023-02-17T08:53:41.366Z",
            "modified": "2023-02-17T09:26:02.641Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.id",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.title",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.description",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.languages",
                    "action": "istype",
                    "value": "array"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.timeLimit",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.memoryLimit",
                    "action": "istype",
                    "value": "number"
                }
            ],
            "docs": "# Get workbook's problem by ID\n\nOpen space 문제집의 문제 하나의 자세한 정보를 가져옵니다."
        },
        {
            "_id": "716e98ff-815b-48d3-b18b-6b00ef757914",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "da3fe5e3-b148-49c1-9b8f-c3b93a993fe2",
            "name": "Succeed",
            "url": "/group/1/contest/1/problem/1",
            "method": "GET",
            "sortNum": 410000,
            "created": "2023-02-17T08:56:02.318Z",
            "modified": "2023-02-17T09:26:56.442Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.id",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.title",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.description",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.languages",
                    "action": "istype",
                    "value": "array"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.timeLimit",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.memoryLimit",
                    "action": "istype",
                    "value": "number"
                }
            ],
            "docs": "# Get group contest's problem by ID\n\n그룹 대회의 문제 하나의 자세한 정보를 가져옵니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "98196ef7-3058-403b-b53d-ced2c2dcf514",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "ca6363a9-53a8-4670-bff7-512a4bbb3a12",
            "name": "404: Nonexistent problem",
            "url": "/workbook/1/problem/0",
            "method": "GET",
            "sortNum": 420000,
            "created": "2023-02-17T08:56:20.392Z",
            "modified": "2023-02-17T08:56:42.219Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ]
        },
        {
            "_id": "589a672b-2aa0-402e-9430-bfb969503a8d",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "f496267d-284b-48b9-9d06-513f7760b811",
            "name": "Succeed",
            "url": "/group/1/contest/1/problem?offset=0&limit=5",
            "method": "GET",
            "sortNum": 430000,
            "created": "2023-02-17T08:57:14.563Z",
            "modified": "2023-02-17T12:25:31.739Z",
            "headers": [],
            "params": [
                {
                    "name": "offset",
                    "value": "0",
                    "isPath": false
                },
                {
                    "name": "limit",
                    "value": "5",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "5"
                }
            ],
            "docs": "# Get group contest's all problems\n\n그룹 대회의 전체 문제를 불러옵니다.\n\n## Query\n\n- `offset`: 몇 번째 item부터 가져올지 정합니다.\n- `limit` :  몇 개의 item을 가져올지 정합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "7160fd5e-5e8d-4c18-b500-8298dd0b64ab",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "da3fe5e3-b148-49c1-9b8f-c3b93a993fe2",
            "name": "404: Nonexistent problem",
            "url": "/group/1/contest/1/problem/0",
            "method": "GET",
            "sortNum": 440000,
            "created": "2023-02-17T09:04:29.436Z",
            "modified": "2023-02-17T09:09:39.835Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "64593304-a380-400f-bd16-f50094f92f04",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8a6f0fa5-98f7-4c1b-9834-6b034f289d5b",
            "name": "Succeed",
            "url": "/group/1/workbook/1/problem?offset=0&limit=5",
            "method": "GET",
            "sortNum": 450000,
            "created": "2023-02-17T09:10:11.361Z",
            "modified": "2023-02-17T12:25:51.499Z",
            "headers": [],
            "params": [
                {
                    "name": "offset",
                    "value": "0",
                    "isPath": false
                },
                {
                    "name": "limit",
                    "value": "5",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id | length",
                    "action": "<=",
                    "value": "5"
                }
            ],
            "docs": "# Get group workbook's all problems\n\n그룹 문제집의 전체 문제를 불러옵니다.\n\n## Query\n\n- `offset`: 몇 번째 item부터 가져올지 정합니다.\n- `limit` :  몇 개의 item을 가져올지 정합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "8530682d-5ca4-4a9a-b10e-f728ba1bd3c9",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "c7cea337-d5d2-457d-8876-f860a61852ef",
            "name": "Succeed",
            "url": "/group/1/workbook/1/problem/1",
            "method": "GET",
            "sortNum": 460000,
            "created": "2023-02-17T09:12:10.398Z",
            "modified": "2023-02-17T09:27:15.137Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.id",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.title",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.description",
                    "action": "istype",
                    "value": "string"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.languages",
                    "action": "istype",
                    "value": "array"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.timeLimit",
                    "action": "istype",
                    "value": "number"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.memoryLimit",
                    "action": "istype",
                    "value": "number"
                }
            ],
            "docs": "# Get group workbook's problem by ID\n\n그룹 문제집의 문제 하나의 자세한 정보를 가져옵니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "04c7409e-f6a4-49ff-b0a8-ea1fd83f6676",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "c7cea337-d5d2-457d-8876-f860a61852ef",
            "name": "404: Nonexistent problem",
            "url": "/group/1/workbook/1/problem/0",
            "method": "GET",
            "sortNum": 470000,
            "created": "2023-02-17T09:14:15.119Z",
            "modified": "2023-02-17T09:16:52.419Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "2b66e831-ee6c-40bc-8b49-07334fd0e38a",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "e69f258a-3604-45e3-92fd-f87e9f25c64a",
            "name": "Succeed (Need approval before join) ",
            "url": "/group/3/join",
            "method": "POST",
            "sortNum": 490000,
            "created": "2023-02-21T00:48:09.835Z",
            "modified": "2023-05-02T13:16:13.229Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                },
                {
                    "type": "json-query",
                    "custom": "json.userGroupData.userId",
                    "action": "equal",
                    "value": "13"
                },
                {
                    "type": "json-query",
                    "custom": "json.userGroupData.groupId",
                    "action": "equal",
                    "value": "3"
                },
                {
                    "type": "json-query",
                    "custom": "json.isJoined",
                    "action": "equal",
                    "value": "false"
                }
            ],
            "docs": "# Join group by id\n\n### Notice\n이 메서드에는 그룹이 가입시에 사전 승인을 필요로 하는지에 따른 2개의 succeed cases가 존재합니다.<br><br>\n\n### URL\nPOST /group/{groupId}/join <br><br>\n\n### Description\n그룹의 id가 `{groupId}`인 그룹에 가입힙니다.<br><br>\n\n### Response Type\n```typscript\n{\n  userGroupData: {\n    userId: Number\n    groupId: Number\n    isGroupLeader: Boolean\n    createTime: Date\n    updateTime: Date\n  },\n  isJoined: Boolean\n}\n```\n\n<br>\n\n### Caution\n테스트 케이스 **400: Duplicated join request**를 실행 했을 때<br>\n테스트 결과에서 pre run이 실패했다는 메세지가 뜨면 무시하셔도 됩니다!",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "8ac61468-d539-4085-97a4-cac31d977444",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "e69f258a-3604-45e3-92fd-f87e9f25c64a",
            "name": "400: Duplicated join request",
            "url": "/group/3/join",
            "method": "POST",
            "sortNum": 500000,
            "created": "2023-02-21T01:44:32.310Z",
            "modified": "2023-05-11T11:03:04.433Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "400"
                },
                {
                    "type": "json-query",
                    "custom": "json.message",
                    "action": "equal",
                    "value": "duplicated join request is not allowed to this group"
                }
            ]
        },
        {
            "_id": "14c37f88-667a-4695-8817-0ab1964b8378",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "e69f258a-3604-45e3-92fd-f87e9f25c64a",
            "name": "404: Nonexistent Group",
            "url": "/group/-1/join",
            "method": "POST",
            "sortNum": 510000,
            "created": "2023-02-21T02:00:24.137Z",
            "modified": "2023-02-21T06:07:04.159Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                },
                {
                    "type": "json-query",
                    "custom": "json.message",
                    "action": "equal",
                    "value": "group does not exist"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "900d5e1c-7d58-441c-9fc8-52f9dd9e0ca3",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "64dbfafd-a97c-478d-9551-21c89d441ebe",
            "name": "Succeed",
            "url": "/group/4/leave",
            "method": "DELETE",
            "sortNum": 520000,
            "created": "2023-02-21T02:04:34.793Z",
            "modified": "2023-04-28T12:28:09.459Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.userId",
                    "action": "equal",
                    "value": "13"
                },
                {
                    "type": "json-query",
                    "custom": "json.groupId",
                    "action": "equal",
                    "value": "4"
                }
            ],
            "docs": "# Leave group\n\n### URL\nDELETE /group/{groupId}/leave <br><br>\n\n### Description\n그룹의 id가 {groupId}인 그룹에서 탈퇴힙니다.<br><br>\n\n### Response Type\n```typscript\n{\n  userId: Number\n  groupId: Number\n  isGroupLeader: Boolean\n  createTime: DateString\n  updateTime: DateString\n}\n```",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "a3aee315-f4c3-4b0b-bf09-ad5ffab9f17a",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "5e0781d0-7301-476d-918b-37bfe370a3f7",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "64dbfafd-a97c-478d-9551-21c89d441ebe",
            "name": "403: Forbidden",
            "url": "/group/3/leave",
            "method": "DELETE",
            "sortNum": 550000,
            "created": "2023-02-21T04:13:48.673Z",
            "modified": "2023-04-28T12:19:03.908Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "403"
                },
                {
                    "type": "json-query",
                    "custom": "json.message",
                    "action": "equal",
                    "value": "Forbidden resource"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "af1c8666-e7a9-47ed-a9d0-edde11990066",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "607d4957-04bd-445a-bc2a-36d2a65c9047",
            "name": "400: Invalid Cursor",
            "url": "/group?cursor=-1&take=5",
            "method": "GET",
            "sortNum": 580000,
            "created": "2023-02-21T06:33:24.526Z",
            "modified": "2023-04-28T11:30:30.985Z",
            "headers": [],
            "params": [
                {
                    "name": "cursor",
                    "value": "-1",
                    "isPath": false
                },
                {
                    "name": "take",
                    "value": "5",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "400"
                },
                {
                    "type": "json-query",
                    "custom": "json.message",
                    "action": "contains",
                    "value": "Invalid cursor value: -1"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "9a846c00-2ab6-4092-81fa-d4b6c1e0b552",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "4130bc7d-5b08-4f36-a173-fc2c3a0b24fb",
            "name": "Succeed",
            "url": "/group/joined",
            "method": "GET",
            "sortNum": 580000,
            "created": "2023-02-21T06:36:54.399Z",
            "modified": "2023-06-24T09:02:30.579Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "groupName"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "description"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "createdBy"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "memberNum"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "isGroupLeader"
                }
            ],
            "docs": "# Get joined groups\n\n### URL\nGET /group/joined <br><br>\n\n### Description\n가입한 그룹의 목록을 불러옵니다.<br><br>\n\n### Response Type\n```typscript\n{\n   id: Number\n   groupName: String\n   description: String\n   memberNum: Number\n   createdBy: String\n   isGroupLeader: Boolean\n} []\n```",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "b2069df2-b962-4c61-8bba-52d2f32da4ba",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "18cc4c2b-1889-43b3-8d3d-8b2f6d453ed3",
            "name": "Succeed (Joined group)",
            "url": "/group/4",
            "method": "GET",
            "sortNum": 590000,
            "created": "2023-02-21T07:00:09.919Z",
            "modified": "2023-04-28T12:59:36.577Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id",
                    "action": "equal",
                    "value": "4"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"groupName\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"description\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "notcontains",
                    "value": "\"createdBy\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "notcontains",
                    "value": "\"memberNum\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "notcontains",
                    "value": "\"leaders\""
                }
            ],
            "docs": "# Get group\n\n### Notice\n이 메서드에는 유저의 그룹 가입 여부에 따른 2개의 Success Cases 및 Response Types들이 존재합니다.<br><br>\n\n### URL\nGET /group/{groupId}<br><br>\n\n### Description\n그룹의 id가 {groupId}인 그룹의 정보를 불러옵니다.<br><br>\n\n### Response Type (Joined group)\n```typscript\n{\n  id: Number\n  groupName: String\n  description: String\n}\n\n```\n<br>\n\n### Response Type (Not joined group)\n```typscript\n{\n  id: Number\n  groupName: String\n  description: String\n  createdBy: String\n  memberNum: Number\n  leaders: String[]\n}\n\n```\n<br>\n\n### Success Cases\n**Joined group**: `가입한` 그룹의 정보를 요청하는 경우<br>\n**Not Joined group**: `가입하지 않은` 그룹의 정보를 요청하는 경우\n<br><br>",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "9dffba42-be8a-48c1-8243-e327ce99589b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "d56e50c0-6c0a-48bb-98ca-1941a4584d23",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "d9b60a8b-4f6a-48c0-a9e8-bcab5069cc24",
            "name": "Succeed",
            "url": "/group/4/leaders",
            "method": "GET",
            "sortNum": 620000,
            "created": "2023-02-21T08:15:42.908Z",
            "modified": "2023-04-28T13:02:54.722Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json | first",
                    "action": "equal",
                    "value": "manager"
                },
                {
                    "type": "json-query",
                    "custom": "json.",
                    "action": "count",
                    "value": "2"
                }
            ],
            "docs": "# Get group leaders\n\n### URL\nGET /group/{groupId}/leaders <br><br>\n\n### Description\n가입한 그룹의 리더의 username 목록을 불러옵니다.<br><br>\n\n### Response Type\n```typscript\nString[]\n```",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "9dffba42-be8a-48c1-8243-e327ce99589b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "376f4101-8eda-49a6-9f64-729bdf9522dc",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dc4b1bd7-bc6f-4a48-b5b1-bd0026d8e3f2",
            "name": "Succeed",
            "url": "/group/2/members",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-02-21T08:19:28.677Z",
            "modified": "2023-04-28T12:21:13.139Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json",
                    "action": "count",
                    "value": "9"
                }
            ],
            "docs": "# Get group members\n\n### URL\nGET /group/{groupId}/members <br><br>\n\n### Description\n가입한 그룹의 멤버들의 username 목록을 불러옵니다.<br><br>\n\n### Response Type\n```typscript\nString[]\n```",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "9dffba42-be8a-48c1-8243-e327ce99589b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "92244561-e2a3-4bb5-952d-f6a8053ee40a",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dc4b1bd7-bc6f-4a48-b5b1-bd0026d8e3f2",
            "name": "403: Forbidden",
            "url": "/group/3/members",
            "method": "GET",
            "sortNum": 20000,
            "created": "2023-02-21T08:23:03.093Z",
            "modified": "2023-04-28T12:18:16.465Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "403"
                },
                {
                    "type": "json-query",
                    "custom": "json.message",
                    "action": "equal",
                    "value": "Forbidden resource"
                }
            ]
        },
        {
            "_id": "a213383d-8a5c-499d-aa1d-5ebfeb3bcb90",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "d9b60a8b-4f6a-48c0-a9e8-bcab5069cc24",
            "name": "403: Forbidden",
            "url": "/group/3/leaders",
            "method": "GET",
            "sortNum": 630000,
            "created": "2023-02-21T08:24:06.274Z",
            "modified": "2023-04-28T13:03:03.856Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "403"
                },
                {
                    "type": "json-query",
                    "custom": "json.message",
                    "action": "equal",
                    "value": "Forbidden resource"
                }
            ]
        },
        {
            "_id": "9dffba42-be8a-48c1-8243-e327ce99589b",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "e69f258a-3604-45e3-92fd-f87e9f25c64a",
            "name": "Succeed (Not need approval before join)",
            "url": "/group/4/join",
            "method": "POST",
            "sortNum": 495000,
            "created": "2023-02-21T10:09:29.921Z",
            "modified": "2023-04-28T11:26:50.017Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "201"
                },
                {
                    "type": "json-query",
                    "custom": "json.userGroupData.userId",
                    "action": "equal",
                    "value": "13"
                },
                {
                    "type": "json-query",
                    "custom": "json.userGroupData.groupId",
                    "action": "equal",
                    "value": "4"
                },
                {
                    "type": "json-query",
                    "custom": "json.isJoined",
                    "action": "equal",
                    "value": "true"
                }
            ],
            "docs": "# Join group by id (Case2)\n\n### warning\n현재 cache db에 올라간 가입 요청을 삭제하는 api가 구현되어있지 않아 최초 한번만 동작합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "900d5e1c-7d58-441c-9fc8-52f9dd9e0ca3",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "ed53dc3f-5d05-4fc3-8307-44eaf8130de9",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "18cc4c2b-1889-43b3-8d3d-8b2f6d453ed3",
            "name": "404: Nonexistent Group",
            "url": "/group/0",
            "method": "GET",
            "sortNum": 605000,
            "created": "2023-02-21T17:03:18.161Z",
            "modified": "2023-02-21T17:33:16.101Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "404"
                },
                {
                    "type": "json-query",
                    "custom": "json.message",
                    "action": "equal",
                    "value": "group does not exist"
                }
            ],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "b61da0f4-d454-48cd-912f-37962278b785",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "18cc4c2b-1889-43b3-8d3d-8b2f6d453ed3",
            "name": "Succeed (Not joined group)",
            "url": "/group/3",
            "method": "GET",
            "sortNum": 592500,
            "created": "2023-02-21T17:23:38.437Z",
            "modified": "2023-04-28T12:43:10.918Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json.id",
                    "action": "equal",
                    "value": "3"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"groupName\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"description\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"createdBy\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"memberNum\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"leaders\""
                }
            ],
            "docs": "# Get group\n\n### URL\nGET /group/{groupId}<br><br>\n\n### Description\n그룹의 id가 {groupId}인 그룹의 정보를 불러옵니다.<br><br>\n\n### Response Type\n```typscript\n{\n  id: Number\n  groupName: String\n  description: String\n}\n\n```",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "f192649d-d966-4b71-acdf-d331f39acd7e",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "607d4957-04bd-445a-bc2a-36d2a65c9047",
            "name": "Succeed",
            "url": "/group?cursor=3&take=5",
            "method": "GET",
            "sortNum": 575000,
            "created": "2023-02-28T03:58:46.391Z",
            "modified": "2023-04-28T12:22:22.515Z",
            "headers": [],
            "params": [
                {
                    "name": "cursor",
                    "value": "3",
                    "isPath": false
                },
                {
                    "name": "take",
                    "value": "5",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "json-query",
                    "custom": "json | filter(id > 1)",
                    "action": "count",
                    "value": "1"
                },
                {
                    "type": "json-query",
                    "custom": "json[0].id",
                    "action": "equal",
                    "value": "4"
                }
            ],
            "docs": "# Get groups\n\n### URL\nGET /group <br><br>\n\n### Query String\n|#|name|type|description|\n|-|--|--|--|\n|1|cursor|number?|전달하지 않을경우 처음부터 {take} 만큼 불러옵니다.|\n|2|take|number|한 번에 불러올 group의 개수|\n\n<br>\n\n### Description\n공개로 설정된 그룹 들의 목록을 불러옵니다.<br><br>\n\n### Response Type\n```typscript\n{\n   id: Number\n   groupName: String\n   description: String\n   createdBy: String\n   memberNum: Number\n} []\n```",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "e80bb4a0-a6b1-4ea7-9469-55898375d4cf",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "8b4393e5-4001-4f7d-9f41-cce5ef02a10b",
            "name": "Succeed",
            "url": "/contest/auth",
            "method": "GET",
            "sortNum": 10000,
            "created": "2023-03-02T10:49:33.129Z",
            "modified": "2023-05-16T15:37:23.334Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"registeredOngoing\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"registeredUpcoming\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"ongoing\""
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"upcoming\""
                }
            ],
            "docs": "# Get all contests\n## 사용자가 로그인된 경우\n\n로그인된 사용자를 위해 모든 대회 목록을 불러옵니다.  \n대회의 진행 상태에 따라 구분합니다. (registered ongoing, registered upcoming, ongoing, upcoming, finished) <br>\n로그인되었으므로 registered contests를 따로 구분합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a8e1d5f-2951-4aca-84b5-3b086055097b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    },
                    {
                        "reqId": "5a59c618-44a1-40e7-899d-c4edab0095c3",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "61f5f9ac-06d3-42dd-a3a6-6d9aa6eca245",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "032d7ed6-f54f-4d85-a220-588597bf686b",
            "name": "Succeed",
            "url": "/contest/finished?take=10",
            "method": "GET",
            "sortNum": 500000,
            "created": "2023-04-10T05:39:19.746Z",
            "modified": "2023-04-10T07:21:00.173Z",
            "headers": [],
            "params": [
                {
                    "name": "take",
                    "value": "10",
                    "isPath": false
                }
            ],
            "tests": [],
            "docs": "# Get all finished contests\n\n\n모든 종료된 대회를 불러옵니다.<br/>페이지네이션이 포함된 요청입니다."
        },
        {
            "_id": "61f884a7-2a08-4519-ad43-60c9eb76630a",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "1e9d4bed-ed09-409a-a12c-676571aa8354",
            "name": "Succeed",
            "url": "/contest/finished?take=3",
            "method": "GET",
            "sortNum": 510000,
            "created": "2023-04-10T07:27:17.842Z",
            "modified": "2023-04-30T11:54:51.334Z",
            "headers": [],
            "params": [
                {
                    "name": "take",
                    "value": "3",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"finished\""
                }
            ],
            "docs": "# Get finished contests\n\n모든 종료된 대회를 가져옵니다.<br/>\ncursor based pagination을 사용합니다."
        },
        {
            "_id": "1964ba6a-65a2-4068-a88f-2228802aba37",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "0e51dd91-afe6-4bcd-835d-b3df3d2b6f07",
            "name": "Succeed",
            "url": "/group/2/contest/finished?take=10",
            "method": "GET",
            "sortNum": 520000,
            "created": "2023-04-10T07:34:27.293Z",
            "modified": "2023-04-30T11:57:12.462Z",
            "headers": [],
            "params": [
                {
                    "name": "take",
                    "value": "10",
                    "isPath": false
                }
            ],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "200"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "\"finished\""
                }
            ],
            "docs": "# Get group's finished contests\n\n그룹내에서 끝난 대회들을 가지고 옵니다. <br/>\nCursor based pagination을 사용합니다.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "de1639a5-d9da-4397-8a13-ae1fc61b849b",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "6fc7d51f-fdb2-4b95-a3f5-f8de95ccc8b2",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "dcc8290a-fa46-4ad9-b9a1-f2f422fe2006",
            "name": "Log In as User (user02)",
            "url": "/auth/login",
            "method": "POST",
            "sortNum": 77500,
            "created": "2023-05-01T11:08:34.294Z",
            "modified": "2023-05-01T11:10:21.674Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "json",
                "raw": "{\n  \"username\": \"user02\",\n  \"password\": \"Useruser\"\n}",
                "form": []
            },
            "tests": [
                {
                    "type": "set-env-var",
                    "custom": "header.authorization",
                    "action": "setto",
                    "value": "{{bearer_token}}"
                },
                {
                    "type": "set-env-var",
                    "custom": "cookie.refresh_token",
                    "action": "setto",
                    "value": "{{refresh_token}}"
                }
            ],
            "docs": "User/Delete Own Account/Succeed 리퀘스트 전송 후에는 작동하지 않을 유틸 리퀘스트입니다.  \n복구를 원한다면 `npx prisma migrate reset`을 실행해주세요."
        },
        {
            "_id": "9ba3bbcf-db6f-41a8-acf1-322e6b5735b3",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "5c0a9108-1d33-407e-91bc-ae25b89bcfe7",
            "name": "403: Forbidden",
            "url": "/group/1/contest",
            "method": "GET",
            "sortNum": 20000,
            "created": "2023-05-01T11:09:01.740Z",
            "modified": "2023-05-01T11:14:09.112Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-code",
                    "custom": "",
                    "action": "equal",
                    "value": "403"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "Forbidden"
                }
            ],
            "docs": "# Get group's all contests\n## 403: Forbidden\n\n만약 요청을 보낸 user가 해당 그룹에 소속되지 않았을 경우 403: Forbidden 에러를 띄웁니다.\n",
            "preReq": {
                "runRequests": [
                    {
                        "_id": "0b535a1b-4437-4f59-af29-c04fde974b01",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "containerId": "8b4393e5-4001-4f7d-9f41-cce5ef02a10b",
                        "name": "401: Unauthorized",
                        "url": "/contest/auth",
                        "method": "GET",
                        "sortNum": 500000,
                        "created": "2023-03-02T11:15:12.248Z",
                        "modified": "2023-05-01T11:13:13.838Z",
                        "headers": [],
                        "params": [],
                        "tests": [
                            {
                                "type": "res-code",
                                "custom": "",
                                "action": "equal",
                                "value": "401"
                            },
                            {
                                "type": "res-body",
                                "custom": "",
                                "action": "contains",
                                "value": "Unauthorized"
                            }
                        ],
                        "docs": "# Get all contests\n## 401: Unauthorized\n\n로그인되지 않은 사용자가 이 요청을 보내면 401로 실패를 합니다.",
                        "preReq": {
                            "runRequests": [
                                {
                                    "reqId": "5a59c618-44a1-40e7-899d-c4edab0095c3",
                                    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                                    "triggerCondition": "run-always",
                                    "triggerValue": ""
                                }
                            ]
                        }
                    },
                    {
                        "_id": "6fc7d51f-fdb2-4b95-a3f5-f8de95ccc8b2",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "containerId": "dcc8290a-fa46-4ad9-b9a1-f2f422fe2006",
                        "name": "Log In as User (user02)",
                        "url": "/auth/login",
                        "method": "POST",
                        "sortNum": 77500,
                        "created": "2023-05-01T11:08:34.294Z",
                        "modified": "2023-05-01T11:10:21.674Z",
                        "headers": [],
                        "params": [],
                        "body": {
                            "type": "json",
                            "raw": "{\n  \"username\": \"user02\",\n  \"password\": \"Useruser\"\n}",
                            "form": []
                        },
                        "tests": [
                            {
                                "type": "set-env-var",
                                "custom": "header.authorization",
                                "action": "setto",
                                "value": "{{bearer_token}}"
                            },
                            {
                                "type": "set-env-var",
                                "custom": "cookie.refresh_token",
                                "action": "setto",
                                "value": "{{refresh_token}}"
                            }
                        ],
                        "docs": "User/Delete Own Account/Succeed 리퀘스트 전송 후에는 작동하지 않을 유틸 리퀘스트입니다.  \n복구를 원한다면 `npx prisma migrate reset`을 실행해주세요."
                    },
                    {
                        "_id": "9ba3bbcf-db6f-41a8-acf1-322e6b5735b3",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "containerId": "5c0a9108-1d33-407e-91bc-ae25b89bcfe7",
                        "name": "403: Forbidden",
                        "url": "/group/1/contest",
                        "method": "GET",
                        "sortNum": 20000,
                        "created": "2023-05-01T11:09:01.740Z",
                        "modified": "2023-05-01T11:14:09.112Z",
                        "headers": [],
                        "params": [],
                        "tests": [
                            {
                                "type": "res-code",
                                "custom": "",
                                "action": "equal",
                                "value": "403"
                            },
                            {
                                "type": "res-body",
                                "custom": "",
                                "action": "contains",
                                "value": "Forbidden"
                            }
                        ],
                        "docs": "# Get group's all contests\n## 403: Forbidden\n\n만약 요청을 보낸 user가 해당 그룹에 소속되지 않았을 경우 403: Forbidden 에러를 띄웁니다.\n",
                        "preReq": {
                            "runRequests": [
                                {
                                    "reqId": "6fc7d51f-fdb2-4b95-a3f5-f8de95ccc8b2",
                                    "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                                    "triggerCondition": "run-always",
                                    "triggerValue": ""
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "_id": "7037c9dd-a8f2-498f-9cb1-0bdbaab07241",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "b089f8be-93f3-41e6-b8d9-b7f5e71f85ca",
            "name": "User Read",
            "url": "http://localhost:3000/graphql",
            "method": "POST",
            "sortNum": 510000,
            "created": "2023-06-15T11:04:01.290Z",
            "modified": "2023-06-24T11:52:48.384Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "query User {\n    getUser(id: 21) {\n        username\n    }\n}"
                }
            },
            "tests": [],
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "1a62bc1b-fbff-4f01-bbb8-bbf08974ea80",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "cfb1afea-8baa-4ce8-b19c-1000c203b134",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "209bec3c-0449-4d8b-9216-1bb92afc77af",
            "name": "User Create",
            "url": "http://localhost:3000/graphql",
            "method": "POST",
            "sortNum": 520000,
            "created": "2023-06-15T11:09:31.592Z",
            "modified": "2023-06-15T12:09:41.166Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation User {\n    createUser(userCreateInput: {\n  username: \"newUser5\",\n  password: \"newUser5\",\n  role: User,\n  email: \"johndoe5@gmail.com\"\n}) {\n        id\n        username\n    }\n}",
                    "variables": "{\n  \"username\": \"newUser\",\n  \"password\": \"newUser\",\n  \"role\": \"user\",\n  \"email\": \"johndoe@gmail.com\"\n}"
                }
            },
            "tests": []
        },
        {
            "_id": "a16a8d0a-ba8d-41a8-988d-abbea3d75f53",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "b089f8be-93f3-41e6-b8d9-b7f5e71f85ca",
            "name": "All User Read",
            "url": "http://localhost:3000/graphql",
            "method": "POST",
            "sortNum": 530000,
            "created": "2023-06-15T11:27:18.088Z",
            "modified": "2023-06-15T12:10:22.541Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "query User {\n    getAllUsers {\n        id\n        username\n    }\n}"
                }
            },
            "tests": []
        },
        {
            "_id": "a324f625-f90b-45ad-8eaf-487d3984bfcd",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "6a7d0144-918c-4112-9774-f941d25b3f67",
            "name": "User Delete",
            "url": "http://localhost:3000/graphql",
            "method": "POST",
            "sortNum": 540000,
            "created": "2023-06-15T11:29:29.954Z",
            "modified": "2023-06-15T12:10:54.536Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation User {\n    deleteUser (id: 21)\n    {\n        id\n        username\n        email\n    }\n}"
                }
            },
            "tests": []
        },
        {
            "_id": "2a08fb0f-3942-4afb-bfeb-eaedf1adbbf7",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "788c0112-2ded-4ce6-86e1-598aae69b21e",
            "name": "User Update",
            "url": "http://localhost:3000/graphql",
            "method": "POST",
            "sortNum": 550000,
            "created": "2023-06-15T11:33:29.947Z",
            "modified": "2023-06-15T12:10:48.777Z",
            "headers": [],
            "params": [],
            "body": {
                "type": "graphql",
                "raw": "",
                "form": [],
                "graphql": {
                    "query": "mutation User {\n    updateUser(id: 21,\n  userUpdateInput: {\n  email: \"johndoe550@gmail.com\"\n}) {\n        id\n        username\n        email\n    }\n}"
                }
            },
            "tests": []
        },
        {
            "_id": "db0cbfea-38e1-4ec6-961d-eea5c93cb432",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "af51ee2a-b6a3-4162-9b37-9d7741ffd67e",
            "name": "Succeed",
            "url": "/group/1/contest/1/clarification",
            "method": "GET",
            "sortNum": 660000,
            "created": "2023-06-24T06:39:38.959Z",
            "modified": "2023-06-24T07:20:40.915Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "content"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "updateTime"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.id | stringify",
                    "action": "notcontains",
                    "value": "null"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.problemId | stringify",
                    "action": "notcontains",
                    "value": "null"
                }
            ],
            "docs": "# Get Clarifications by Contest\n\n파라미터로 주어진 group contest와 관련된 clarification의 목록을 불러옵니다.  \n\n### Problem\n- 리스폰스의 `problem`은 각 clarification이 직접적으로 등록되어 있는 문제를 나타냅니다.\n- `problem.id`는 문제 정렬을 위해 작성자가 임의로 설정할 수 있는 값(= 사용자에게 보여주기 위한 ID)이고, 실제 서버에서 해당 레코드를 찾을 때 사용되는 ID는 `problem.problemId`입니다.\n- 관련 문제에 접근하려면 `/contest/:contestId/problem/${problem.problemId}`로 GET 리퀘스트를 보내주세요.",
            "preReq": {
                "runRequests": [
                    {
                        "reqId": "6fc7d51f-fdb2-4b95-a3f5-f8de95ccc8b2",
                        "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
                        "triggerCondition": "run-always",
                        "triggerValue": ""
                    }
                ]
            }
        },
        {
            "_id": "1d84b7b7-7f24-4f5c-af1e-9dae389d6697",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "07c06f7a-4664-48a7-a7a1-2eef5942f39b",
            "name": "Succeed",
            "url": "/contest/1/problem/1/clarification",
            "method": "GET",
            "sortNum": 670000,
            "created": "2023-06-24T06:44:20.345Z",
            "modified": "2023-06-24T07:15:23.794Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "content"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "updateTime"
                }
            ],
            "docs": "# Get Clarifications by Contest\n\n파라미터로 주어진 open space contest의 problem에 등록된 clarification의 목록을 불러옵니다.  "
        },
        {
            "_id": "e88a1fa5-1a37-4fda-99ac-7427ffb71719",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "7b4a93f3-807f-40e9-a830-8ba1d261ccb9",
            "name": "Succeed",
            "url": "/contest/1/clarification",
            "method": "GET",
            "sortNum": 660000,
            "created": "2023-06-24T07:04:33.600Z",
            "modified": "2023-06-24T07:04:33.600Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "content"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "updateTime"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.id | stringify",
                    "action": "notcontains",
                    "value": "null"
                },
                {
                    "type": "json-query",
                    "custom": "json.problem.problemId | stringify",
                    "action": "notcontains",
                    "value": "null"
                }
            ],
            "docs": "# Get Clarifications by Contest\n\n파라미터로 주어진 open space contest와 관련된 clarification의 목록을 불러옵니다.  \n\n### Problem\n- 리스폰스의 `problem`은 각 clarification이 직접적으로 등록되어 있는 문제를 나타냅니다.\n- `problem.id`는 문제 정렬을 위해 작성자가 임의로 설정할 수 있는 값(= 사용자에게 보여주기 위한 ID)이고, 실제 서버에서 해당 레코드를 찾을 때 사용되는 ID는 `problem.problemId`입니다.\n- 관련 문제에 접근하려면 `/contest/:contestId/problem/${problem.problemId}`로 GET 리퀘스트를 보내주세요."
        },
        {
            "_id": "fdde2ff7-4fad-4bc8-b923-296d71843be9",
            "colId": "07dc2986-f7a6-4827-8ec2-cb288e3de5e7",
            "containerId": "ff1c5805-4fdd-44d4-ba67-f10ad9a06368",
            "name": "Succeed",
            "url": "/group/1/contest/1/problem/1/clarification",
            "method": "GET",
            "sortNum": 670000,
            "created": "2023-06-24T07:15:39.073Z",
            "modified": "2023-06-24T07:21:17.946Z",
            "headers": [],
            "params": [],
            "tests": [
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "id"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "content"
                },
                {
                    "type": "res-body",
                    "custom": "",
                    "action": "contains",
                    "value": "updateTime"
                }
            ],
            "docs": "# Get Clarifications by Contest\n\n파라미터로 주어진 group contest의 problem에 등록된 clarification의 목록을 불러옵니다.  "
        }
    ]
}