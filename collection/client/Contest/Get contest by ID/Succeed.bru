meta {
  name: Succeed
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/contest/1?groupId=1
  body: none
  auth: none
}

query {
  groupId: 1
}

assert {
  res.status: eq 200
  res("id"): isNumber
  res("title"): isString
  res("startTime"): isString
  res("endTime"): isString
  res("group.id"): isNumber
  res("group.groupName"): isString
  res("description"): isString
  res("_count.contestRecord"): isNumber
  res("isRegistered"): isBoolean
}

script:pre-request {
  await require("./login").loginUser2nd(req);
}

docs {
  ## Get Contest by ID

  하나의 대회 정보와 Contest 참여자 정보, 로그인한 유저가 해당 Contest에 참여가능한지 여부에 대한 정보를 가져옵니다. (로그인 하지 않은 유저는 Open Space의 Contest 정보만 볼 수 있고, `isRegistered`는 항상 `false`)
  ### Path

  | 이름 | 타입 | 설명 |
  |-----|-----|-----|
  |id|Integer|Contest(대회) ID|

  ### Query

  | 이름 | 타입 | 설명 |
  |-----|-----|-----|
  |groupId|Integer|대회가 속한 Group ID|

  ### Error Case

  #### [404] Contest does not exist

  존재하지 않는 ContestID를 Path로 주면 오류가 납니다.
}
