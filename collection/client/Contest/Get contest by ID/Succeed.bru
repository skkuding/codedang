meta {
  name: Succeed
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/contest/1?groupId=1
  body: none
  auth: none
}

query {
  groupId: 1
}

assert {
  res.status: eq 200
  res("id"): isNumber
  res("title"): isString
  res("startTime"): isString
  res("endTime"): isString
  res("group.id"): isNumber
  res("group.groupName"): isString
  res("description"): isString
  res("_count.contestRecord"): isNumber
  res("standings[0].user.id"): isNumber
  res("standings[0].user.username"): isString
  res("standings[0].score"): isNumber
  res("standings[0].totalPenalty"): isNumber
  res("standings[0].standing"): isNumber
}

script:pre-request {
  await require("./login").loginUser(req);
}

docs {
  # Get Contest by ID
  
  하나의 대회 정보와 Contest 참여자 정보를 가져옵니다.
  ## Path
  
  | 이름 | 타입 | 설명 |
  |-----|-----|-----|
  |id|Integer|Contest(대회) ID|
  
  ## Query
  
  | 이름 | 타입 | 설명 |
  |-----|-----|-----|
  |groupId|Integer|대회가 속한 Group ID|
}
