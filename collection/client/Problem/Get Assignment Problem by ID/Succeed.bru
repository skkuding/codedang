meta {
  name: Succeed
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/assignment/:assignmentId/problem/:problemId
  body: none
  auth: none
}

params:path {
  problemId: 1
  assignmentId: 1
}

assert {
  res.status: eq 200
  res.body.order: isNumber
  res.body.problem: isJson
}

script:pre-request {
  await require("./login").loginUser(req);
}

docs {
  # 📘 Get Assignment Problem by ID

  **GET** `/assignment/:assignmentId/problem/:problemId`

  하나의 문제 정보를 가져옵니다.

  이 함수는 다음과 같은 조건에 따라 1개의 문제 정보를 조회하고 반환합니다.

  1. 운영진, 일반 사용자
  - assignmentId에 해당하는 assignment로 들어갔을 때,
    해당 assignment에 파라미터로 넘기는 problemId 숫자가 있는 경우

  2. 예외 발생 상황
  - assignmentId에 해당하는 assignment에, 파라미터로 넘기는 problemId가 없는 경우 예외를 발생시킵니다.

    > assignmentId가 없을 때 : ForbiddenAccessException 발생

    > assignmentId는 있으나, 해당 assignment에 problemId가 없을 때 : PrimsaClientKnownRequestError 발생

  ### 🔒 Authentication

  - 과제 시작 전: 문제 액세스 불가 (Register 안하면 에러 메시지가 다름)
  - 과제 진행 중: Participate한 경우 문제 액세스 가능
  - 과제 종료 후: Participate한 경우 문제 액세스 가능

  ### 📥 Request Parameters

  #### Path Parameters

  | Name | Type | Required | Description |
  |------|------|----------|-------------|
  | problemId    | Integer | ✅ |assignment 속 problem 번호|
  | assignmentId | Integer | ✅ |assignment 번호           |
}
