meta {
  name: 409: ConflictFoundError
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/user/problem/8
  body: json
  auth: none
}

body:json {
  {
    "template": [
      {
        "language": "Cpp",
        "code": [
          {
            "id": 1,
            "text": "#include <bits/stdc++.h>\n using namespace std;\n int main() { cout << \"hello, world\" << endl;\n return 0; }",
            "locked": false
          }
        ]
      }
    ]
  }
}

assert {
  res.status: eq 409
  res.body.message: eq "UserProblem"
  res.body.error: eq "Conflict"
  res.body.statusCode: eq 409
}

script:pre-request {
  await require("./login").loginUser(req);
}

docs {
  # Create User Code
  - 현재 `User`가 풀고 있는 `Problem`에 대해서 `User`의 `Code`를 저장합니다.
  - `User`와 `Problem`을 `N:M`으로 mapping한 `UserProblem` Table에 저장합니다.
  - 현 Request는 `user01`(`id`:`4`)가 `problemId`가 `8`인 문제를 풀 때 상황을 가정했습니다.
  - `userId`가 `4`인 `User`가 `problemId`가 `8`인 `Problem`의 `UserProblem`은 이미 존재합니다. (`Succeed` request가 성공한 후에)
}
