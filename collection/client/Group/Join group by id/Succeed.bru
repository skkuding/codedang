meta {
  name: Succeed
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/group/4/join
  body: none
  auth: none
}

assert {
  res.status: eq 201
  res("userGroupData").userId: isNumber
  res("userGroupData").groupId: eq 4
  res("userGroupData").isGroupLeader: eq false
  res("userGroupData").createTime: isString
  res("userGroupData").updateTime: isString
  res("isJoined"): eq true
}

script:pre-request {
  const axios = require("axios");
  
  await require("./login").loginUser(req);
  
  const baseUrl = bru.getEnvVar("baseUrl");
  const authorization = bru.getVar("jwtToken");
  try {
    await axios.delete(
      baseUrl + "/group/4/leave",
      { headers: { authorization } }
    )
  } catch (error) {}
}

docs {
  # Join Group by Id
  ---
  - URL param으로 전달된 `groupId`에 해당하는 Group에 가입합니다.
  - URL Query로 `invitation` 초대 코드를 전달할 수 있습니다.
  - 가입된 Group의 정보를 반환합니다.
}
