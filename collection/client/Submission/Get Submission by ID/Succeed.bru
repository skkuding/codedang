meta {
  name: Succeed
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/submission/8?problemId=1&groupId=1&contestId=1
  body: none
  auth: none
}

query {
  problemId: 1
  groupId: 1
  contestId: 1
}

assert {
  res.status: eq 200
  res.body[0].id: isNumber
  res.body[0].submissionId: isNumber
  res.body[0].problemTestcaseId: isNumber
  res.body[0].result: isString
  res.body[0].cpuTime: isNumber
  res.body[0].memoryUsage: isNumber
  res.body[0].createTime: isString
  res.body[0].updateTime: isString
}

script:pre-request {
  await require("./login").loginUser(req);
}

docs {
  ## Get Submission by ID
  
  문제의 제출 내역 정보를 가져옵니다.
  
  ### Path
  
  | 이름 | 타입 | 설명 |
  |-----|-----|-----| 
  |:id|Integer|Submission ID| 
  
  ### Query
  
  > 필수 query는 * 표시하였습니다.
  
  | 이름 | 타입 | 설명 |
  |-----|-----|-----|
  |problemId *|Integer|문제 ID|
  |contestId|Integer|문제가 속한 대회 ID|
  |groupId|Integer|문제가 속한 Group ID (default: 1)|
  
  ### Error Case
  
  #### 404: Nonexistent Submission
  
  존재하지 않는 `submissionId`를 요청합니다.
  
  #### 404: Nonexistent Problem
  
  존재하지 않는 `problemId`를 요청합니다.
}
