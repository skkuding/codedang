meta {
  name: Succeed
  type: http
  seq: 1
}

delete {
  url: {{baseUrl}}/course/1/qna/1
  body: none
  auth: none
}

script:pre-request {
  const login = require('./login');
  await login.loginUser(req);
}

settings {
  encodeUrl: true
}

tests {
  test("should return 200 OK with deleted question", function() {
    const data = res.getBody();
    expect(res.getStatus()).to.equal(200);
    expect(data).to.have.property('id');
    expect(data).to.have.property('order');
    expect(data).to.have.property('title');
    // Deleted question data is returned
  });
}

docs {
  # 📘 Delete Course Question

  **DELETE** `/course/:id/qna/:order`

  Delete a single question for a specific course.

  특정 강의의 특정 order에 해당하는 질문을 삭제합니다.

  이 함수는 다음과 같은 조건에 따라 질문을 삭제하고 반환합니다:

  1. 교수/조교
     - 모든 질문을 삭제할 수 있습니다.
  2. 일반 사용자
     - 본인이 작성한 질문만 삭제할 수 있습니다.

  질문을 찾을 수 없거나 접근 권한이 없는 경우 예외를 발생시킵니다.

  - Course나 Question이 실제로 없으면 EntityNotExistException 발생
  - 작성자 또는 교수/조교 이외의 사용자가 요청하는 경우 ForbiddenAccessException 발생

  ---

  ### 🔒 Authentication

  ✅ Required
  작성자 본인 또는 교수/조교만 삭제 가능

  ---

  ### 📥 Request Parameters

  #### Path Parameters

  | Name    | Type   | Required | Description                     |
  |---------|--------|----------|---------------------------------|
  | `id`    | number | ✅       | ID of the target course         |
  | `order` | number | ✅       | Order of target Q&A in course   |

  ---

  ### 📤 Response

  #### Success Response (200 OK)
```json
  {
    "id": 1,
    "order": 1,
    "createdById": 7,
    "groupId": 1,
    "title": "강의 전반에 대한 질문입니다",
    "content": "이번 주차 과제 제출 기한이 언제인가요?",
    "category": "general",
    "isPrivate": false,
    "isResolved": false,
    "problemId": null,
    "readBy": [7],
    "createTime": "2025-01-15T10:30:00.000Z",
    "updateTime": "2025-01-15T10:30:00.000Z"
  }
