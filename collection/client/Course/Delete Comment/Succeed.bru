meta {
  name: Succeed
  type: http
  seq: 1
}

delete {
  url: {{baseUrl}}/course/1/qna/1/comment/1
  body: none
  auth: none
}

script:pre-request {
  const login = require('./login');
  await login.loginUser(req);
}

settings {
  encodeUrl: true
}

tests {
  test("should return 200 OK with deleted comment", function() {
    const data = res.getBody();
    expect(res.getStatus()).to.equal(200);
    expect(data).to.have.property('id');
    expect(data).to.have.property('order');
    expect(data).to.have.property('content');
    expect(data).to.have.property('courseQnAId');
  });
}

docs {
  # 📘 Delete Course Q&A Comment

  **DELETE** `/course/:id/qna/:qnaOrder/comment/:commentOrder`

  Delete a single comment for a specific question.

  특정 질문의 특정 order에 해당하는 댓글을 삭제합니다.

  이 함수는 다음과 같은 조건에 따라 댓글을 삭제하고 반환합니다:

  1. 교수/조교
     - 모든 댓글을 삭제할 수 있습니다.
  2. 일반 사용자
     - 본인이 작성한 댓글만 삭제할 수 있습니다.

  댓글을 찾을 수 없거나 접근 권한이 없는 경우 예외를 발생시킵니다.

  - Course, Question, Comment가 실제로 없으면 EntityNotExistException 발생
  - 작성자 또는 교수/조교 이외의 사용자가 요청하는 경우 ForbiddenAccessException 발생

  **중요:** 마지막 댓글을 삭제하면 질문의 해결 상태(`isResolved`)가 자동으로 업데이트됩니다.
  - 남은 마지막 댓글이 교수/조교가 작성한 경우: `isResolved: true`
  - 남은 댓글이 없거나 마지막 댓글이 학생이 작성한 경우: `isResolved: false`

  ---

  ### 🔒 Authentication

  ✅ Required
  작성자 본인 또는 교수/조교만 삭제 가능

  ---

  ### 📥 Request Parameters

  #### Path Parameters

  | Name           | Type   | Required | Description                        |
  |----------------|--------|----------|------------------------------------|
  | `id`           | number | ✅       | ID of the target course            |
  | `qnaOrder`     | number | ✅       | Order of target Q&A in course      |
  | `commentOrder` | number | ✅       | Order of target comment in Q&A     |

  ---

  ### 📤 Response

  #### Success Response (200 OK)
```json
  {
    "id": 1,
    "order": 1,
    "content": "이 질문에 대한 댓글입니다.",
    "courseQnAId": 1,
    "createdById": 7,
    "isStaff": false,
    "createTime": "2025-01-15T11:00:00.000Z",
    "updateTime": "2025-01-15T11:00:00.000Z"
  }
}
