meta {
  name: Succeed (With Problem Filter)
  type: http
  seq: 5
}

get {
  url: {{baseUrl}}/course/1/qna?categories=problem&problemIds=1&problemIds=2
  body: none
  auth: none
}

params:query {
  categories: problem
  problemIds: 1
  problemIds: 2
}

script:pre-request {
  const login = require('./login');
  await login.loginUser(req);
}

tests {
  test("should return questions for specific problems", function() {
    const data = res.getBody();
    expect(res.getStatus()).to.equal(200);
    expect(data).to.be.an('array');

    // All questions should be about problem 1 or 2
    if (data.length > 0) {
      data.forEach(question => {
        expect(question.category).to.equal('problem');
        expect(question.problemId).to.be.oneOf([1, 2]);
      });
    }
  });
}

docs {
  # 📘 Get Course Questions (Problem Filter)

  특정 문제들에 대한 질문만 필터링하여 조회합니다.

  - `categories=problem`을 반드시 포함해야 합니다.
  - `problemIds`에 여러 문제 ID를 배열로 전달할 수 있습니다.
}
