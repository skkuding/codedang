meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetContestQnAs($contestId: Int, $filter: GetContestQnAsFilterInput) {
    getContestQnAs(contestId: $contestId, filter: $filter) {
      id
      order
      title
      content
      category
      isResolved
      createTime
      contestId
      createdBy {
        username
      }
      _count {
        comments
      }
    }
  }
}

body:graphql:vars {
  {
    "contestId": 1,
    "filter": {
      "isResolved": false,
      "orderBy": "desc"
    }
  }
}

docs {
  ## Get Contest QnAs

  - 특정 대회의 QnA들을 조회하거나, 모든 대회의 QnA를 조회할 수 있습니다.
  - contestId가 제공되면 해당 대회의 QnA만 조회합니다.
  - contestId가 제공되지 않으면 모든 대회의 QnA를 조회합니다.
  - 필터링 옵션을 통해 해결 상태와 정렬 순서를 지정할 수 있습니다.

  ### Parameters

  | Name | Type | Required | Description |
  |------|------|----------|-------------|
  | contestId | Int | x | 조회할 대회 ID (제공하지 않으면 모든 대회) |
  | filter | GetContestQnAsFilterInput | x | 필터링 옵션 |

  ### Filter Options

  | Name | Type | Description |
  |------|------|-------------|
  | isResolved | Boolean | 해결 상태 필터링 (true: 해결됨, false: 미해결) |
  | orderBy | String | 정렬 순서 ("asc" 또는 "desc", 기본값: "desc") |

  ### Response Fields

  | Name | Type | Description |
  |------|------|-------------|
  | id | Int | QnA ID |
  | order | Int | 대회 내 QnA 순서 |
  | title | String | QnA 제목 |
  | content | String | QnA 내용 |
  | category | QnACategory | QnA 카테고리 |
  | isResolved | Boolean | 해결 완료 여부 |
  | createTime | DateTime | 생성 시간 |
  | contestId | Int | 대회 ID |
  | createdBy.username | String | 작성자 사용자명 |
  | _count.comments | Int | 댓글 개수 |
}
