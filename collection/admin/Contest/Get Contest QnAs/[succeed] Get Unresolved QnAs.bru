meta {
  name: [succeed] Get Unresolved QnAs
  type: graphql
  seq: 2
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetUnresolvedQnAs($contestId: Int!, $take: Int!, $cursor: Int!, $filter: GetContestQnAsFilterInput) {
    getContestQnAs(
      contestId: $contestId,
      take: $take,
      cursor: $cursor,
      filter: $filter
    ) {
      id
      order
      title
      content
      category
      isResolved
      createTime
      contestId
      createdBy {
        username
      }
      _count {
        comments
      }
    }
  }
}

body:graphql:vars {
  {
    "contestId": 20,
    "take": 10,
    "cursor": 1,
    "filter": {
      "isResolved": false
    }
  }
}

script:pre-request {
  await require("./login").loginContestAdmin(req);
}

docs {
  ## [succeed] Get Unresolved QnAs

  - 특정 콘테스트의 미해결 QnA만 조회합니다.
  - `isResolved: false`로 설정하여 미해결 QnA만 필터링합니다.
  - 페이지네이션을 지원하여 대량의 QnA도 효율적으로 처리할 수 있습니다.

  ### Parameters

  | Name | Type | Required | Description |
  |------|------|----------|-------------|
  | contestId | Int! | 필수 | 콘테스트 ID |
  | take | Int! | 필수 | 가져올 개수 (기본값: 10) |
  | cursor | Int | 선택 | 페이지네이션 커서 |
  | filter | GetContestQnAsFilterInput | 선택 | 필터링 옵션 (isResolved: false) |

  ### Use Cases

  - **Admin 대시보드**: 답변해야 할 QnA 모니터링
  - **우선순위 처리**: 가장 긴급한 QnA부터 답변
  - **작업량 파악**: 처리해야 할 QnA 개수 확인

  ### Response

  `isResolved: false`인 QnA만 반환되며, 최신순으로 정렬됩니다.
  페이지네이션을 통해 효율적으로 데이터를 가져올 수 있습니다.
}
