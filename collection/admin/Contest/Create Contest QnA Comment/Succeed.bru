meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  mutation CreateContestQnAComment(
    $contestId: Int!
    $order: Int!
    $content: String!
  ) {
    createContestQnAComment(
      contestId: $contestId
      order: $order
      content: $content
    ) {
      id
      content
      isContestStaff
      order
      contestQnAId
      createdTime
    }
  }
}

body:graphql:vars {
  {
    "contestId": 20,
    "order": 1,
    "content": "해당 문제에 대한 답변입니다."
  }
}

script:pre-request {
  await require("./login").loginContestAdmin(req);
}

docs {
  # 📘 Create Contest QnA Comment

  **POST** `/graphql (mutation: createContestQnAComment)`

  Creates a comment on a contest QnA by a staff member.

  대회 QnA에 스태프(운영진)의 답변 댓글을 생성합니다.

  이 함수는 특정 QnA에 댓글을 추가하고, 해당 QnA가 아직 해결되지 않은 상태(`isResolved: false`)였다면 해결된 상태(`isResolved: true`)로 업데이트합니다.

  ---

  ### 🔒 Authentication

  ✅ Required (Contest Staff)

  ---

  ### 📥 Request Variables

  | Name | Type | Required | Description |
  |---|---|---|---|
  | `contestId` | Int | ✅ | 댓글을 작성할 QnA가 속한 대회의 ID |
  | `order` | Int | ✅ | 댓글을 작성할 QnA의 순번(order) |
  | `content` | String | ✅ | 댓글 내용 |

  ---

  ### 📤 Response Body

  #### Content-Type: `application/json`

  ```json
  {
    "data": {
      "createContestQnAComment": {
        "id": "8",
        "content": "해당 문제에 대한 답변입니다. 다음과 같이 해결할 수 있습니다.",
        "isContestStaff": true,
        "order": 3,
        "contestQnAId": 7,
        "createdTime": "2025-09-18T06:25:21.639Z"
      }
    }
  }
  ```

  | Field | Type | Description |
  |--------|------|------|
  | `id` | Int | 생성된 댓글의 ID |
  | `content` | String | 답글 내용 |
  | `isContestStaff` | Boolean | 스태프 작성 여부 (항상 `true`) |
  | `order` | Int | QnA 내에서의 댓글 순서 |
  | `contestQnAId` | Int | 댓글이 달린 QnA의 ID |
  | `createdTime` | GraphQLISODateTime | 댓글 생성 시간 |
}
