meta {
  name: Succeed - Toggle to Resolved
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  mutation {
    toggleContestQnAResolved(
      contestId: 1
      qnAOrder: 1
    ) {
      id
      order
      isResolved
      title
      content
      category
      createTime
      contestId
      problemId
      createdById
    }
  }
}

script:pre-request {
  await require("./login").loginAdmin(req);
}

docs {
  # Succeed - Toggle to Resolved
  
  ## Description
  운영진이 QnA의 해결완료 상태(미해결 -> 해결)를 수동으로 변경할 수 있게  합니다. 
  
  ## 성공 조건
  - 운영진 권한을 가진 사용자로 로그인
  - 존재하는 대회 ID와 QnA 순서
  - QnA에 댓글이 존재
  - 마지막 댓글이 일반 사용자 댓글 (운영진 댓글이 아님)
  
  ## 요청 파라미터
  | 필드명 | 타입 | 필수 여부 | 설명 |
  |--------|------|----------|------|
  | contestId | Int | 필수 | 대회 ID |
  | qnAOrder | Int | 필수 | QnA 순서 |
  
  ## 응답 필드
  | 필드명 | 타입 | 설명 |
  |--------|------|------|
  | id | Int | QnA ID |
  | order | Int | QnA 순서 |
  | isResolved | Boolean | 해결완료 상태 (토글 후) |
  | title | String | QnA 제목 |
  | content | String | QnA 내용 |
  | category | QnACategory | QnA 카테고리 |
  | createTime | DateTime | 생성 시간 |
  | contestId | Int | 대회 ID |
  | problemId | Int | 문제 ID (nullable) |
  | createdById | Int | 작성자 ID |
  
  ## 테스트 시나리오
  1. 운영진이 QnA에 답글 작성
  2. 일반 사용자가 추가 질문 댓글 작성
  3. 운영진이 토글 버튼 클릭
  4. QnA 상태가 해결완료로 변경
  
  ## 예상 결과
  - `isResolved: true`로 변경
  - HTTP 200 성공 응답
  - 업데이트된 QnA 정보 반환
}
