meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  mutation DeleteContestQnAComment(
    $contestId: Int!
    $qnAOrder: Int!
    $commentOrder: Int!
  ) {
    deleteContestQnAComment(
      contestId: $contestId
      qnAOrder: $qnAOrder
      commentOrder: $commentOrder
    ) {
      id
      content
      isContestStaff
      order
      contestQnAId
      createdTime
    }
  }
}

body:graphql:vars {
  {
    "contestId": 20,
    "qnAOrder": 1,
    "commentOrder": 1
  }
}

script:pre-request {
  await require("./login").loginContestAdmin(req);
}

docs {
  # 📘 Delete Contest QnA Comment

  **POST** `/graphql (mutation: deleteContestQnAComment)`

  Deletes a specific comment from a contest QnA.

  특정 QnA에 달린 댓글을 삭제합니다.

  댓글 삭제 후, 해당 QnA에 남은 마지막 댓글이 스태프(운영진)에 의해 작성된 것이라면 QnA의 해결 상태(`isResolved`)를 `true`로, 그렇지 않다면 `false`로 업데이트합니다.

  삭제된 댓글의 정보를 반환합니다.

  ---

  ### 🔒 Authentication

  ✅ Required (Contest Staff)

  ---

  ### 📥 Request Variables

  | Name | Type | Required | Description |
  |---|---|---|---|
  | `contestId` | Int | ✅ | 댓글이 속한 대회의 ID |
  | `qnAOrder` | Int | ✅ | 댓글이 속한 QnA의 순번 |
  | `commentOrder` | Int | ✅ | 삭제할 댓글의 순번 |

  ---

  ### 📤 Response Body

  #### Content-Type: `application/json`

  ```json
  {
    "data": {
      "deleteContestQnAComment": {
        "id": "4",
        "content": "7번 질문에 대한 관리자 답변",
        "isContestStaff": true,
        "order": 1,
        "contestQnAId": 7,
        "createdTime": "2025-09-18T07:18:43.172Z"
      }
    }
  }
  ```

  | Field | Type | Description |
  |---|---|---|---|
  | `id` | Int | 삭제된 댓글 ID |
  | `content` | String | 댓글 내용 |
  | `isContestStaff` | Boolean | 댓글 작성자의 Staff 여부 |
  | `order` | Int | 삭제된 댓글의 순번 |
  | `contestQnAId` | Int | QnA ID |
  | `createdTime` | GraphQLISODateTime | 생성 시간 |
}
