meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query {
    getContestQnA(
      contestId: 20
      order: 1
    ) {
      id
      title
      content
      createTime
      createdById
      createdBy {
        username
      }
      comments {
        content
        createdById
        createdBy {
          username
        }
      }
    }
  }
}

assert {
  res.body.data.getContests: isDefined
}

script:pre-request {
  await require("./login").loginContestAdmin(req);
}

docs {
  # Get Contest QnA
  
  ## Description
  관리자가 특정 콘테스트의 특정 순서 QnA를 조회할 수 있도록 합니다.
  
  ## 요청 필드
  | 필드명 | 타입 | 필수 여부 | 설명 |
  |--------|------|----------|------|
  | contestId | Int | 필수 | 콘테스트 ID |
  | order | Int | 필수 | QnA 순서 (0 이상의 정수) |
  
  ## 응답 필드
  | 필드명 | 타입 | 설명 |
  |--------|------|------|
  | id | Int | QnA ID |
  | title | String | QnA 제목 |
  | content | String | QnA 내용 |
  | createTime | GraphQLISODateTime | 생성 시간 |
  | createdById | Int | 작성자 ID |
  | createdBy | User | 작성자 정보 |
  | createdBy.username | String | 작성자 사용자명 |
  
  ## 제약사항
  - `contestId`는 존재하는 콘테스트여야 합니다.
  - `order`는 존재하는 QnA의 순서여야 합니다.
  
}
