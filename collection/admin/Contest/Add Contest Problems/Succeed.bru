meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

headers {
  Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQsInVzZXJuYW1lIjoidXNlcjAxIiwiaWF0IjoxNzA0MzQ3NjM3LCJleHAiOjE3MDQzNDk0MzcsImlzcyI6InNra3VkaW5nLmRldiJ9.lUSTD0wMshh4yrvhsa69tFa65j-9xkisyZ70AF4SSTU
}

body:graphql {
  mutation {
    addContestProblems(
      contestId: 3
      groupId: 2
      problemIds: [1, 2, 3]
    ) {
      order
      contestId
      problemId
      score
    }
  }
}

assert {
  res.body.data.addContestProblems: isDefined
}

docs {
  # Add Problems
  ---
  - Contest에 Problem을 추가합니다.
  - 주어진 Contest Id와 Problem Ids에 따라 새로운 ContestProblem을 생성하고 반환합니다.
  - 주어진 Problem이 이미 Contest에 존재한다면 무시됩니다(변화 없음).
  - 존재하지 않는 Problem Id를 전달하는 경우에도 무시됩니다.
}
