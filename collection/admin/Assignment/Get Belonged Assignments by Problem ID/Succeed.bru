meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetAssignmentsByProblemId($problemId: Int!) {
    getAssignmentsByProblemId(problemId: $problemId) {
      upcoming {
        id
        title
        problemScore
        totalScore
      }
      ongoing {
        id
        title
        problemScore
        totalScore
      }
      finished {
        id
        title
        problemScore
        totalScore
      }
    }
  }
}

body:graphql:vars {
  {
    "problemId": 1
  }
}

assert {
  res.body.data.getAssignmentsByProblemId: isDefined
}

docs {
  ## Get Assignments By Problem ID
  Problem ID를 가지고 Assignments정보를 가져옵니다.
  Ongoing, Upcoming, Finished로 Group된 Assignments를 반환합니다.

  ### Error Cases
  - Problem ID에 해당하는 Problem이 없거나, 해당 Problem ID에 해당하는 Belonged Assignment가 0개인 경우 Problem or Assignment Problem Does not exist 에러를 반환합니다.
}
