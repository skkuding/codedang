meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetGroupMembers($groupId: Int!, $cursor: Int, $take: Int!, $leaderOnly: Boolean!) {
    getGroupMembers(groupId: $groupId, cursor: $cursor, take: $take, leaderOnly: $leaderOnly) {
    	username
      userId
      name
      email
    }
  }
}

body:graphql:vars {
  {
    "groupId": 1,
    "cursor": 1,
    "take": 5,
    "leaderOnly": false
  }
}

assert {
  res.body.data.getGroupMembers[0].username: isString
  res.body.data.getGroupMembers[0].userId: isNumber
  res.body.data.getGroupMembers[0].name: isString
  res.body.data.getGroupMembers[0].email: isString
}

docs {
  ## Get Group Members
  특정 GroupId에 해당되는 Member들을 가져옵니다.
  
  ### Args / Query / Params / Body
  | 이름 | 타입 | 설명 |
  |--|--|--|
  |take|Int|한번에 가져올 데이터의 수, 기본값은 10.|
  |groupId|Int|포함하지 않으면 Open Space에 대한 요청이 된다. 기본값은 1.|
  |cursor|Int?|cursor값.|
  |leaderOnly|Boolean|해당 Group 내 Leader만을 반환할 것인지의 여부, 기본값은 false.|
  
  
  ### Error Case
  해당 없음 (존재하지 않은 groupId일 때에는 []를 반환합니다.)
}
