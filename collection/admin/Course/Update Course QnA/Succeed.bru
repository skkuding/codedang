meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  mutation UpdateCourseQnA($groupId: Int!, $input: UpdateCourseQnAInput!) {
    updateCourseQnA(groupId: $groupId, input: $input) {
      id
      order
      title
      content
      isPrivate
      isResolved
    }
  }
}

body:graphql:vars {
  {
    "groupId": 2,
    "input": {
      "order": 1,
      "title": "Updated Question Title",
      "content": "Updated question content",
      "isPrivate": true,
      "isResolved": false
    }
  }
}

assert {
  res.body.data.updateCourseQnA: isDefined
}

script:pre-request {
  await require("./login").loginInstructor(req);
}

docs {
  # ðŸ“˜ Update Course QnA

  **POST** `/graphql (mutation: updateCourseQnA)`

  Updates course QnA details.

  ì½”ìŠ¤ Q&A ì •ë³´ë¥¼ ìˆ˜ì •í•©ë‹ˆë‹¤.

  ---

  ### ðŸ”’ Authentication

  âœ… Required (Course Staff)

  ---

  ### ðŸ“¥ Request Variables

  - `groupId` (Int, required): ì½”ìŠ¤ ID
  - `input.order` (Int, required): ìˆ˜ì •í•  Q&A ìˆœë²ˆ
  - `input.title` (String, optional): ì œëª©
  - `input.content` (String, optional): ë‚´ìš©
  - `input.isPrivate` (Boolean, optional): ë¹„ë°€ê¸€ ì—¬ë¶€
  - `input.isResolved` (Boolean, optional): í•´ê²° ì—¬ë¶€
}
