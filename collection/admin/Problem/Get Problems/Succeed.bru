meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetProblems($input: FilterProblemsInput!, $cursor: Int, $take: Int!, $my: Boolean, $shared: Boolean, $contestId: Int) {
    getProblems(input: $input, cursor: $cursor, take: $take, my: $my, shared: $shared, contestId: $contestId) {
      id
      createdBy {
        id
        username
      }
      title
      updateTime
      difficulty
      description
      inputDescription
      outputDescription
      hint
      isVisible
      languages
      solution
      template
      sharedGroups {
        id
        groupName
      }
      problemTag {
        id
        tag {
          id
          name
        }
      }
    }
  }
}

body:graphql:vars {
  {
    "input": {
      "difficulty": ["Level1", "Level2", "Level3", "Level4", "Level5"],
      "languages": ["C", "Cpp", "Java", "Python3"]
    },
    "cursor": null,
    "take": 30,
    "my": false,
    "shared": false
  }
}

assert {
  res.body.data.getProblems: isDefined
}

docs {
  # Get Problems
  조건에 맞는 Problem들을 가져옵니다.
  조건에 맞는 Problem이 없다면, 빈 배열을 반환합니다.

  ## Query

  > 필수 query는 * 표시하였습니다.

  | 이름 | 타입 | 설명 |
  |-----|-----|-----|
  |input*|FilterProblemsInput|문제 필터링 조건|
  |cursor|Integer|cursor 값보다 큰 ID 문제 필터링|
  |take*|Integer|가져올 문제 수 (default: 10)|
  |my*|boolean|내가 만든 문제인지 여부 (default: false)|
  |shared*|boolean|공유된 문제인지 여부 (default: false)|
  |contestId|Integer|문제가 속한 대회 ID (default: null)|

  ## Response

  ### my=false & shared=false 시
  전체 문제 목록 반환

  ### my=true & contestId 지정 시
  해당 대회에서 Admin∙Manager 역할인 경우,
  본인이 만든 문제와 대회 Admin∙Manager가 만든 문제를 함께 반환

  ### my=true & contestId 미지정 시
  본인이 만든 문제만 반환

  ### shared=true 시
  사용자가 그룹 리더인 그룹에 공유된 문제만 반환
}
