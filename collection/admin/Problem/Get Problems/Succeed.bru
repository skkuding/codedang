meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetProblems($input: FilterProblemsInput!, $cursor: Int, $take: Int!, $mode: String!, $contestId: Int) {
    getProblems(input: $input, cursor: $cursor, take: $take, mode: $mode, contestId: $contestId) {
      id
      createdBy {
        id
        username
      }
      title
      updateTime
      difficulty
      description
      inputDescription
      outputDescription
      hint
      isVisible
      languages
      solution
      template
      sharedGroups {
        id
        groupName
      }
      problemTag {
        id
        tag {
          id
          name
        }
      }
    }
  }
}

body:graphql:vars {
  {
    "input": {
      "difficulty": ["Level1", "Level2", "Level3", "Level4", "Level5"],
      "languages": ["C", "Cpp", "Java", "Python3"]
    },
    "cursor": null,
    "take": 10,
    "mode": "contest",
    "contestId": 20
  }
}

assert {
  res.body.data.getProblems: isDefined
}

docs {
    # Get Problems
    조건에 맞는 Problem들을 가져옵니다.
    조건에 맞는 Problem이 없다면, 빈 배열을 반환합니다.
  
    ## Query
  
    > 필수 query는 * 표시하였습니다.
  
    | 이름 | 타입 | 설명 |
    |-----|-----|-----|
    |input*|FilterProblemsInput|문제 필터링 조건|
    |cursor|Integer|cursor 값보다 큰 ID 문제 필터링|
    |take*|Integer|가져올 문제 수 (default: 10)|
    |mode*| 'my', 'shared', 'contest'|문제 조회 방식 선택|
    |contestId|Integer|문제가 속한 대회 ID (default: null)|
  
    > 단, SuperAdmin의 경우 mode에 관계 없이 my와 모든 contest의 문제들 조회 가능
    
    ## mode 설명
  
  | mode 값 | 설명 |
  |-----|-----|
  |'my'|본인이 만든 문제만 조회|
  |'contest'|본인 또는 contestId 대회의 Admin/Manager가 만든 문제를 조회 (이 경우 contestId 필수)|
  |'shared'|사용자가 그룹 리더로 있는 그룹에 공유된 문제 조회|
  
  ## 예시 조건별 응답 요약
  |mode|contestId|결과|
  |-----|-----|-----|
  |my|❌|본인이 만든 문제만|
  |contest|✔️|본인 또는 Admin/Manager가 만든 해당 대회 문제|
  |contest|❌|본인이 만든 해당 대회 문제(대회 생성시)|
  |shared|무시됨|공유된 문제만 (리더인 그룹 기준)|
  |잘못된 조합|❌|예외 발생 (예: contest인데 contestId 없음)|
  
}
