meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetProblems($input: FilterProblemsInput!, $cursor: Int, $take: Int!, $my: Boolean, $shared: Boolean) {
    getProblems(input: $input, cursor: $cursor, take: $take, my: $my, shared: $shared) {
      id
      createdById
      title
      description
      inputDescription
      outputDescription
      hint
      isVisible
      sharedGroups {
        id
        groupName
      }
      problemTag {
        id
        tag {
          id
          name
        }
      }
    }
  }
}

body:graphql:vars {
  {
    "input": {
      "difficulty": ["Level1", "Level2", "Level3", "Level4", "Level5"],
      "languages": ["C", "Cpp", "Java", "Python3"]
    },
    "cursor": 1,
    "take": 10,
    "my": false,
    "shared": false
  }
}

assert {
  res.body.data.getProblems: isDefined
}

docs {
  ## Get Problems
  조건에 맞는 Problem들을 가져옵니다.
  조건에 맞는 Problem이 없다면, 빈 배열을 반환합니다.
}
