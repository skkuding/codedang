meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  mutation UpdateTag($oldTagName: String!, $newTagName: String!) {
    updateTag(oldTagName: $oldTagName, newTagName: $newTagName) {
      id
      name
      createTime
      updateTime
    }
  }
}

body:graphql:vars {
  {
    "oldTagName": "마라 rose 분 mo자 tteokbokki",
    "newTagName": "마라 로제 분모자 떡볶이"
  }
}

assert {
  res.body.data.updateTag: isDefined
}

docs {
  ## Update a Tag
  `oldTagName`을 `newTagName`으로 업데이트합니다.
  
  ### Args 
  
  | 이름 | 타입 | 설명 |
  |--|--|--|
  |`oldTagName`|`String`|이전 `tagName`|
  |`newTagName`|`String`|새로운 `tagName`|
  
  ### Error Case
  
  #### NOT_FOUND
  
  `oldTagName`에 해당하는 `tagName`을 DB에서 발견하지 못하면, `NOT_FOUND` 에러가 발생합니다.
  
  #### CONFLICT
  
  `newTagName`에 해당하는 `tagName`이 DB에서 사용 중이면, `CONFLICT` 에러가 발생합니다.
}
