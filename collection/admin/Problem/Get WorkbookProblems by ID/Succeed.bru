meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetWorkbookProblems($groupId: Int!, $workbookId: Int!) {
    getWorkbookProblems(groupId: $groupId, workbookId: $workbookId) {
      order
      workbookId
      problemId
      createTime
      updateTime
    }
  }
  
}

body:graphql:vars {
  {
    "groupId": 1,
    "workbookId":  1
  }
}

assert {
  res.body.data.getWorkbookProblems[0].order: isNumber
  res.body.data.getWorkbookProblems[0].workbookId: isNumber
  res.body.data.getWorkbookProblems[0].problemId: isNumber
  res.body.data.getWorkbookProblems[0].createTime: isString
  res.body.data.getWorkbookProblems[0].updateTime: isString
}

docs {
  # Get WorkbookProblems by ID
  
  - `groupId`와 `workbookId`를 이용하여, `WorkbookProblem`들을 모두 가져 옵니다.  
  - `workbookId`가 `groupId`에 속하지 않으면, 에러를 반환합니다.  
}
