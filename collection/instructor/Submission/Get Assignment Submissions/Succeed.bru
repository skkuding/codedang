meta {
  name: Succeed
  type: graphql
  seq: 1
}

post {
  url: {{gqlUrl}}
  body: graphql
  auth: none
}

body:graphql {
  query GetAssignmentSubmissions(
    $groupId: Int!,
    $input: GetAssignmentSubmissionsInput!,
    $cursor: Int,
    $take: Int,
    $order: String
  ) {
    getAssignmentSubmissions(
      groupId: $groupId,
      input: $input,
      cursor: $cursor,
      take: $take,
      order: $order
    ) {
      title
      studentId
      realname
      username
      result
      language
      submissionTime
      codeSize
      problemId
      order
      ip
      id
    }
  }
}

body:graphql:vars {
  {
    "groupId": 2,
    "input": {
      "assignmentId": 1,
      "problemId": 1,
      "searchingName": "lee"
    },
    "take": 10,
    "order": "username-desc"
  }
}

docs {
  ## Get Assignment Submissions
  
  - Assignment Overall 페이지 중 All Submissions 탭에서 표시할 데이터를 반환합니다.
  - https://github.com/skkuding/codedang/pull/1924
  
  #### 필요 인자
  | `input`  | `take` | `cursor` |`order`|
  |----------|--------|----------|--------|
  | 밑에서 설명 | Pagination 구현을 위함 | Pagination 구현을 위함 | 정렬 |
  
  `input`
  - `assignmentId`: 제출 내역을 불러올 Assignment의 ID
  - `problemId?`: 제출된 내역 중 특정 Problem의 제출만 필터링
  - `searchingName?`: 필터링할 User의 realName(없으면 모든 유저)
  
  `order`
  - `studentId-asc`: 학번 오름차순 정렬
  - `studentId-desc`: 학번 내림차순 정렬
  - `realName-asc`: 학생이름 오름차순 정렬
  - `realName-desc`: 학생이름 내림차순 정렬
  - `username-asc`: username 오름차순 정렬
  - `username-desc`: username 내림차순 정렬
  
}
